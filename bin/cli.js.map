{"version":3,"file":"cli.js","sources":["../cli/call-command.ts","../cli/copy-extrance.ts","../cli/ensure-dir.ts","../cli/find-command.ts","../cli/source-dest-files.ts","../cli/start.ts","../cli/console-hello.ts","../cli/index.ts","../cli/parse-args.ts","../cli/showhelp.ts"],"sourcesContent":["import { spawn } from \"child_process\";\nimport process from \"process\";\n/**\n *\n * @param {string} command\n * @param { string[]} commandargs\n */\n\nfunction 执行命令(\n    /* commandstring,  */ command: string,\n    commandargs: string[]\n) {\n    // console.log(commandstring);\n    console.log(\"\\n\");\n    console.log([command, ...commandargs]);\n    const runobj = spawn(command, commandargs, {\n        stdio: [\"pipe\", \"pipe\", \"pipe\"],\n    });\n    runobj.stdout.on(\"data\", (data) => {\n        console.log(\n            ` ${data}`\n                .split(\"\\n\")\n                .filter((t) => t !== \"\")\n                .join(\"\\n\\n\")\n        );\n        console.log(\"\\n\");\n    });\n    runobj.stderr.on(\"data\", (data) => {\n        console.error(\n            ` ${data}`\n                .split(\"\\n\")\n                .filter((t) => t !== \"\")\n                .join(\"\\n\\n\")\n        );\n        console.log(\"\\n\");\n    });\n    runobj.on(\"close\", (code) => {\n        console.log(`child process exited with code ${code}`);\n        process.exit(code || 0);\n    });\n}\nexport default 执行命令;\n","import fs from \"fs\";\nimport path from \"path\";\nimport process from \"process\";\nimport 判断并创建目录 from \"./ensure-dir\";\nconst pwddir = process.cwd();\n/**\n * @param {(import(\"fs\").PathLike)[]} sourcefiles\n * @param {string[]} destfiles\n */\nexport default function 生成入口文件(\n    sourcefiles: string[],\n    destfiles: string[]\n) {\n    /**\n     * @param {import(\"fs\").PathLike} p\n     * @param {number} i\n     *\n     */\n    destfiles.forEach((p, i) => {\n        if (!fs.existsSync(p)) {\n            console.log(`inputfile  not exsited! ${p}\\n`);\n            console.log(`initialize inputfile from ${sourcefiles[i]}\\n`);\n            [\"public\", \"src\"]\n                .map((t) => path.resolve(pwddir, t))\n                .forEach((e) => 判断并创建目录(e));\n            fs.copyFileSync(sourcefiles[i], p);\n        }\n    });\n}\n","/**\n * @param {import(\"fs\").PathLike} p\n */\nexport default function 判断并创建目录(p: fs.PathLike) {\n    if (!fs.existsSync(p)) {\n        console.log(\"所需的目录不存在,创建目录\", p);\n        console.log(\"\\n\");\n        fs.mkdirSync(p);\n    }\n}\nimport fs from \"fs\";\n","/**\n * @param {string} t\n */\nexport function commandfind(t: string) {\n    return path.join(\n        __dirname,\n        \"../\",\n        \"node_modules\",\n        \".bin\",\n        t.trim() + (process.platform === \"win32\" ? \".cmd\" : \"\")\n    );\n}\nimport path from \"path\";\nimport process from \"process\";\n","import path from \"path\";\nimport process from \"process\";\n// const fs = require(\"fs\");\nconst pwddir = process.cwd();\n\nconst inputfiles = [\"public/index.html\", \"src/index.js\", \"public/favicon.ico\"];\nconst sourcefiles = inputfiles.map((p) =>\n    path.resolve(__dirname, \"../\", \"release\", p)\n);\nconst destfiles = inputfiles.map((p) => path.resolve(pwddir, p));\n\nexport { sourcefiles, destfiles };\n","import fs from \"fs\";\nimport path from \"path\";\nimport process from \"process\";\nimport 执行命令 from \"./call-command\";\nimport 生成入口文件 from \"./copy-extrance\";\nimport { commandfind } from \"./find-command\";\nimport { showhelp } from \"./showhelp\";\nimport { destfiles, sourcefiles } from \"./source-dest-files\";\nconst webpackcmd = \"webpack\";\nexport function start(\n    operation: string | undefined,\n    参数object: Record<string, string>\n) {\n    const 解析参数config = 参数object[\"config\"];\n    const defaultwebpackconfig = require.resolve(\n        path.resolve(__dirname, \"../\", \"./release/config/webpack.config.js\")\n    );\n    const 参数webpackconfigfile = 解析参数config\n        ? path.resolve(解析参数config)\n        : defaultwebpackconfig;\n    Reflect.set(参数object, \"config\", 参数webpackconfigfile);\n    const mode = 参数object[\"mode\"];\n    if (\"start\" === operation || \"development\" === mode) {\n        let command: string, commandargs: string[];\n        process.env.NODE_ENV = \"development\";\n        Reflect.set(参数object, \"mode\", process.env.NODE_ENV);\n\n        生成入口文件(sourcefiles, destfiles);\n        command = commandfind(webpackcmd);\n        commandargs = [\"serve\", \"--progress\"];\n        changecmdnpx(command, commandargs, (cmd: string) => {\n            command = cmd;\n        });\n        addparamstocmdargs(参数object, commandargs);\n        console.log(\"\\n\");\n        console.log(`开发模式 启动 webpack-dev-server`);\n        console.log(\"\\n\");\n        执行命令(command, commandargs);\n    } else if (\"build\" === operation || \"production\" === mode) {\n        let command: string, commandargs: string[];\n        console.log(\"\\n\");\n        console.log(`生产模式 启动 webpack`);\n        console.log(\"\\n\");\n        process.env.NODE_ENV = \"production\";\n        Reflect.set(参数object, \"mode\", process.env.NODE_ENV);\n        生成入口文件(sourcefiles, destfiles);\n        command = commandfind(webpackcmd);\n        commandargs = [\"build\", \"--progress\"];\n        changecmdnpx(command, commandargs, (cmd: string) => {\n            command = cmd;\n        });\n\n        addparamstocmdargs(参数object, commandargs);\n        执行命令(command, commandargs);\n    } else {\n        showhelp();\n    }\n}\n\nfunction addparamstocmdargs(参数object: object, commandargs: string[]) {\n    Object.entries(参数object).forEach(([key, value]) => {\n        commandargs.push(`--${key}=${value}`);\n    });\n}\n\nfunction changecmdnpx(\n    command: fs.PathLike,\n    commandargs: string[],\n    setcmd: { (cmd: string): void }\n) {\n    if (!fs.existsSync(command)) {\n        commandargs.unshift(webpackcmd);\n        setcmd(\"npx\" + (process.platform === \"win32\" ? \".cmd\" : \"\"));\n    }\n}\n","export function consolehello() {\n    console.log(\"\\n\");\n    console.log(\"webpack-react-vue-spa-awesome-config\");\n    console.log(\"\\n\");\n    console.log(\n        `极速、零配置的 web 应用打包工具, 同时支持 react 和 vue 的单页面应用,提供开箱即用支持,基于webpack `\n    );\n    console.log(\"\\n\");\n    console.log(\n        \"Fast, zero-configuration web application packaging tool that supports both single-page applications for react and vue, out-of-the-box support\"\n    );\n    console.log(\"\\n\");\n    console.log(`\\nworking directory : ${process.cwd()}\\n`);\n    console.log(`\\ncommand filename : ${__filename}\\n`);\n}\nimport process from \"process\";\n","// #!/usr/bin/env node\n\"use strict\";\nimport process from \"process\";\nimport { consolehello } from \"./console-hello\";\n// import 判断并创建目录 from \"./ensure-dir\";\nimport { parseargs } from \"./parse-args\";\nimport { start } from \"./start\";\n\nconsolehello();\n// console.log(\"输入的参数:\");\n// console.log(JSON.stringify(process.argv, null, 4));\nconst inargs = process.argv.slice(2);\nconsole.log(\"接收的参数\", inargs);\nconst operation = inargs.includes(\"start\")\n    ? \"start\"\n    : inargs.includes(\"build\")\n    ? \"build\"\n    : undefined;\nconst 参数object = parseargs(inargs);\nconsole.log(\"解析的参数:\");\nconsole.log(JSON.stringify(参数object, null, 4));\n\nstart(operation, 参数object);\n","/**\n * @param {string[]} args\n * @returns{Record<string,string>}\n */\nfunction parseargs(args: string[]): Record<string, string> {\n    /**@type{Record<string,string>} */\n    const 参数obj: Record<string, string> = {};\n    args.filter((s) => s.startsWith(\"--\"))\n        .map((s) => /--(?<key>.+?)=(?<value>.+)/g.exec(s))\n        .forEach((execArray) => {\n            var _a, _b, _c;\n            const groups =\n                (_a = execArray) === null || _a === void 0 ? void 0 : _a.groups;\n            const key =\n                (_b = groups) === null || _b === void 0 ? void 0 : _b.key;\n            const value =\n                (_c = groups) === null || _c === void 0 ? void 0 : _c.value;\n            if (key && value) {\n                参数obj[key] = value;\n            }\n        });\n    return 参数obj;\n}\nexport { parseargs };\n","import process from \"process\";\n\nexport function showhelp() {\n    console.log(\"\\n\");\n    console.log(\"usage:\");\n    console.log(\"\\n\");\n    console.log(`开发模式\\n启动 webpack-dev-server`);\n    console.log(\"\\n\");\n    console.log(\n        \"webpack-react-vue-spa-awesome-config start --mode=development\"\n    );\n    console.log(\"\\n\");\n    console.log(`生产模式\\n启动 webpack`);\n    console.log(\"\\n\");\n    console.log(\"webpack-react-vue-spa-awesome-config build --mode=production\");\n    console.log(\"\\n\");\n    process.exit(1);\n}\n"],"names":["执行命令","command","commandargs","console","log","runobj","spawn","stdio","stdout","on","data","split","filter","t","join","stderr","error","code","process","exit","pwddir","cwd","生成入口文件","sourcefiles","destfiles","forEach","p","i","fs","existsSync","map","path","resolve","e","mkdirSync","判断并创建目录","copyFileSync","commandfind","__dirname","trim","platform","inputfiles","addparamstocmdargs","参数object","Object","entries","key","value","push","changecmdnpx","setcmd","unshift","__filename","inargs","argv","slice","参数obj","operation","includes","undefined","s","startsWith","exec","execArray","_a","_b","_c","groups","JSON","stringify","解析参数config","defaultwebpackconfig","require","参数webpackconfigfile","Reflect","set","mode","env","NODE_ENV","cmd","start"],"mappings":"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"}