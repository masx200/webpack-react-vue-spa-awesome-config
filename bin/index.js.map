{"version":3,"file":"index.js","sources":["../cli/src/call-command.js","../cli/src/copy-extrance.js","../cli/src/ensure-dir.js","../cli/src/find-command.js","../cli/src/source-dest-files.js","../cli/src/console-hello.js","../cli/src/index.js","../cli/src/parse-args.js","../cli/src/start.js","../cli/src/showhelp.js"],"sourcesContent":["import { spawn } from \"child_process\";\nimport process from \"process\";\n/**\n *\n * @param {string} command\n * @param { string[]} commandargs\n */\n\nfunction 执行命令(/* commandstring,  */ command, commandargs) {\n    // console.log(commandstring);\n    console.log(\"\\n\");\n    console.log([command, commandargs]);\n    const runobj = spawn(command, commandargs, {\n        stdio: [\"pipe\", \"pipe\", \"pipe\"],\n    });\n    runobj.stdout.on(\"data\", (data) => {\n        console.log(\n            ` ${data}`\n                .split(\"\\n\")\n                .filter((t) => t !== \"\")\n                .join(\"\\n\\n\")\n        );\n        console.log(\"\\n\");\n    });\n    runobj.stderr.on(\"data\", (data) => {\n        console.error(\n            ` ${data}`\n                .split(\"\\n\")\n                .filter((t) => t !== \"\")\n                .join(\"\\n\\n\")\n        );\n        console.log(\"\\n\");\n    });\n    runobj.on(\"close\", (code) => {\n        console.log(`child process exited with code ${code}`);\n        process.exit(code);\n    });\n}\nexport default 执行命令;\n","import fs from \"fs\";\nimport path from \"path\";\nimport process from \"process\";\nimport 判断并创建目录 from \"./ensure-dir\";\nconst pwddir = process.cwd();\n/**\n * @param {(import(\"fs\").PathLike)[]} sourcefiles\n * @param {string[]} destfiles\n */\nexport default function 生成入口文件(sourcefiles, destfiles) {\n    /**\n     * @param {import(\"fs\").PathLike} p\n     * @param {number} i\n     *\n     */\n    destfiles.forEach((p, i) => {\n        if (!fs.existsSync(p)) {\n            console.log(`inputfile  not exsited! ${p}\\n`);\n            console.log(`initialize inputfile from ${sourcefiles[i]}\\n`);\n            [\"public\", \"src\"]\n                .map((t) => path.resolve(pwddir, t))\n                .forEach((e) => 判断并创建目录(e));\n            fs.copyFileSync(sourcefiles[i], p);\n        }\n    });\n}\n","/**\n * @param {import(\"fs\").PathLike} p\n */\nexport default function 判断并创建目录(p) {\n    if (!fs.existsSync(p)) {\n        console.log(\"所需的目录不存在,创建目录\", p);\n        console.log(\"\\n\");\n        fs.mkdirSync(p);\n    }\n}\nimport fs from \"fs\";\n","/**\n * @param {string} t\n */\nexport function commandfind(t) {\n    return path.join(\n        __dirname,\n        \"../\",\n        \"node_modules\",\n        \".bin\",\n        t.trim() + (process.platform === \"win32\" ? \".cmd\" : \"\")\n    );\n}\nimport path from \"path\";\nimport process from \"process\";\n","const path = require(\"path\");\n// const fs = require(\"fs\");\nconst pwddir = process.cwd();\n\nconst inputfiles = [\"public/index.html\", \"src/index.js\", \"public/favicon.ico\"];\nconst sourcefiles = inputfiles.map((p) =>\n    path.resolve(__dirname, \"../\", \"release\", p)\n);\nconst destfiles = inputfiles.map((p) => path.resolve(pwddir, p));\n\nexport { sourcefiles, destfiles };\n\nimport process from \"process\";\n","export function consolehello() {\n    console.log(\"\\n\");\n    console.log(\"webpack-react-vue-spa-awesome-config\");\n    console.log(\"\\n\");\n    console.log(\n        `极速、零配置的 web 应用打包工具, 同时支持 react 和 vue 的单页面应用,提供开箱即用支持,基于webpack `\n    );\n    console.log(\"\\n\");\n    console.log(\n        \"Fast, zero-configuration web application packaging tool that supports both single-page applications for react and vue, out-of-the-box support\"\n    );\n    console.log(\"\\n\");\n    console.log(`\\nworking directory : ${process.cwd()}\\n`);\n    console.log(`\\ncommand filename : ${__filename}\\n`);\n}\nimport process from \"process\";\n","// #!/usr/bin/env node\n\"use strict\";\nimport process from \"process\";\nimport { consolehello } from \"./console-hello\";\n// import 判断并创建目录 from \"./ensure-dir\";\nimport { parseargs } from \"./parse-args\";\nimport { start } from \"./start\";\n\nconsolehello();\n// console.log(\"输入的参数:\");\n// console.log(JSON.stringify(process.argv, null, 4));\nconst inargs = process.argv.slice(1);\nconst operation = inargs.includes(\"start\")\n    ? \"start\"\n    : inargs.includes(\"build\")\n    ? \"build\"\n    : undefined;\nconst 参数object = parseargs(inargs);\nconsole.log(\"解析的参数:\");\nconsole.log(JSON.stringify(参数object, null, 4));\n\nstart(operation, 参数object);\n","/**\n * @param {string[]} args\n * @returns{Record<string,string>}\n */\nfunction parseargs(args) {\n    /**@type{Record<string,string>} */\n    const 参数obj = {};\n    args.filter((s) => s.startsWith(\"--\"))\n        .map((s) => /--(?<key>.+?)=(?<value>.+)/g.exec(s))\n        .forEach((execArray) => {\n            var _a, _b, _c;\n            const groups =\n                (_a = execArray) === null || _a === void 0 ? void 0 : _a.groups;\n            const key =\n                (_b = groups) === null || _b === void 0 ? void 0 : _b.key;\n            const value =\n                (_c = groups) === null || _c === void 0 ? void 0 : _c.value;\n            if (key && value) {\n                参数obj[key] = value;\n            }\n        });\n    return 参数obj;\n}\nexport { parseargs };\n","import fs from \"fs\";\nimport path from \"path\";\nimport process from \"process\";\nimport 执行命令 from \"./call-command\";\nimport 生成入口文件 from \"./copy-extrance\";\nimport { commandfind } from \"./find-command\";\nimport { showhelp } from \"./showhelp\";\nimport { destfiles, sourcefiles } from \"./source-dest-files\";\nconst webpackcmd = \"webpack\";\n/**\n * @param {string|undefined} operation\n * @param {Record<string,string>} 参数object\n */\nexport function start(operation, 参数object) {\n    const 解析参数config = 参数object[\"config\"];\n    // const 解析参数mode = 参数object.mode;\n\n    const defaultwebpackconfig = require.resolve(\n        path.resolve(__dirname, \"../\")\n    );\n    const 参数webpackconfigfile = 解析参数config\n        ? path.resolve(解析参数config)\n        : defaultwebpackconfig;\n    const 解析参数publicpath = 参数object[\"output-public-path\"];\n    const mode = 参数object[\"mode\"];\n    if (\"start\" === operation || \"development\" === mode) {\n        let command, commandargs;\n        process.env.NODE_ENV = \"development\";\n        生成入口文件(sourcefiles, destfiles);\n        command = commandfind(webpackcmd);\n        commandargs = [\n            \"serve\",\n            \"--config\",\n            参数webpackconfigfile,\n            \"--mode=\" + process.env.NODE_ENV,\n        ];\n        if (!fs.existsSync(command)) {\n            commandargs.unshift(webpackcmd);\n            command = \"npx\" + (process.platform === \"win32\" ? \".cmd\" : \"\");\n        }\n        //升级webpack5的修改命令 webpack serve\n\n        Object.entries(参数object).forEach(([key, value]) => {\n            commandargs.push(`--${key}=${value}`);\n        });\n        console.log(\"\\n\");\n        console.log(`开发模式\n启动 webpack-dev-server`);\n        console.log(\"\\n\");\n        执行命令(/* commandstring, */ command, commandargs);\n    } else if (\"build\" === operation || \"production\" === mode) {\n        let command, commandargs;\n        console.log(\"\\n\");\n        console.log(`生产模式\n启动 webpack`);\n        console.log(\"\\n\");\n        process.env.NODE_ENV = \"production\";\n        生成入口文件(sourcefiles, destfiles);\n        command = commandfind(webpackcmd);\n        commandargs = [\n            \"--config\",\n            参数webpackconfigfile,\n            \"--mode=\" + process.env.NODE_ENV,\n        ];\n        if (!fs.existsSync(command)) {\n            commandargs.unshift(webpackcmd);\n            command = \"npx\" + (process.platform === \"win32\" ? \".cmd\" : \"\");\n        }\n        Object.entries(参数object).forEach(([key, value]) => {\n            commandargs.push(`--${key}=${value}`);\n        });\n        if (解析参数publicpath && 解析参数publicpath.length) {\n            commandargs.push(\"--output-public-path=\" + 解析参数publicpath);\n            //   console.log(`  output-public-path  :  ${解析参数publicpath}`);\n            console.log(\"\\n\");\n        }\n        执行命令(/* commandstring, */ command, commandargs);\n    } else {\n        showhelp();\n    }\n}\n","import process from \"process\";\n\nexport function showhelp() {\n    console.log(\"\\n\");\n    console.log(\"usage:\");\n    console.log(\"\\n\");\n    console.log(`开发模式\\n启动 webpack-dev-server`);\n    console.log(\"\\n\");\n    console.log(\n        \"webpack-react-vue-spa-awesome-config start --mode=development\"\n    );\n    console.log(\"\\n\");\n    console.log(`生产模式\\n启动 webpack`);\n    console.log(\"\\n\");\n    console.log(\"webpack-react-vue-spa-awesome-config build --mode=production\");\n    console.log(\"\\n\");\n    process.exit(1);\n}\n"],"names":["执行命令","command","commandargs","console","log","runobj","spawn","stdio","stdout","on","data","split","filter","t","join","stderr","error","code","process","exit","pwddir","cwd","生成入口文件","sourcefiles","destfiles","forEach","p","i","fs","existsSync","map","path","resolve","e","mkdirSync","判断并创建目录","copyFileSync","commandfind","__dirname","trim","platform","require","inputfiles","__filename","参数obj","inargs","argv","slice","operation","includes","undefined","参数object","s","startsWith","exec","execArray","_a","_b","_c","groups","key","value","JSON","stringify","解析参数config","defaultwebpackconfig","参数webpackconfigfile","解析参数publicpath","mode","env","NODE_ENV","unshift","Object","entries","push","length","start"],"mappings":"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"}