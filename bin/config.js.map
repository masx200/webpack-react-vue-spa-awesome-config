{"version":3,"file":"config.js","sources":["../lib/config.ts"],"sourcesContent":["(\"use strict\");\nimport type {\n    WebpackPluginInstance,\n    ModuleOptions,\n    RuleSetRule,\n} from \"webpack\";\nexport type Configuration = import(\"webpack\").Configuration & {\n    entry: string[];\n    plugins: WebpackPluginInstance[];\n    module: ModuleOptions & { rules: RuleSetRule[] };\n} & { devServer: import(\"webpack-dev-server\").Configuration };\nexport function createconfig(\n    env: Record<string, any>,\n    argv: Record<string, any>\n): Configuration {\n    console.log(\"env:\", env, \"\\n\", \"argv:\", argv);\n\n    function resolvevueloadermodulepath() {\n        var vueversion;\n\n        try {\n            //@ts-ignore\n            vueversion = require(\"vue\").version;\n        } catch (e) {\n            if (e?.code === \"MODULE_NOT_FOUND\") {\n                return require.resolve(\"vue-loader\");\n            } else {\n                throw e;\n            }\n        }\n\n        if (\"3\" === vueversion.split(\".\")[0]) {\n            return require.resolve(\"vue-loader-16\");\n        } else {\n            return require.resolve(\"vue-loader\");\n        }\n    }\n\n    // const ReactRefreshTypeScript = require(\"react-refresh-typescript\");\n    const ForkTsCheckerWebpackPlugin = require(\"fork-ts-checker-webpack-plugin\");\n    // const ReactRefreshWebpackPlugin = require(\"@pmmmwh/react-refresh-webpack-plugin\");\n    const fs = require(\"fs\");\n    const CopyPlugin = require(\"copy-webpack-plugin\");\n    const WorkboxWebpackPlugin = require(\"workbox-webpack-plugin\");\n    const safePostCssParser = require(\"postcss-safe-parser\");\n    const OptimizeCSSAssetsPlugin = require(\"optimize-css-assets-webpack-plugin\");\n    const TerserPlugin = require(\"terser-webpack-plugin\");\n    const { VueLoaderPlugin } = require(resolvevueloadermodulepath());\n    const MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\n    const path = require(\"path\");\n    const HtmlWebpackPlugin = require(\"html-webpack-plugin\");\n    const webpack = require(\"webpack\");\n    const postcssNormalize = require(\"postcss-normalize\");\n\n    const PreloadWebpackPlugin = require(\"@vue/preload-webpack-plugin\");\n\n    const { CleanWebpackPlugin } = require(\"clean-webpack-plugin\");\n\n    const 参数object = argv;\n\n    const 解析参数publicpath = 参数object[\"output-public-path\"];\n    const mode = 参数object[\"mode\"];\n    process.env.NODE_ENV =\n        参数object[\"mode\"] === \"production\"\n            ? \"production\"\n            : 参数object[\"mode\"] === \"development\"\n            ? \"development\"\n            : process.env.NODE_ENV;\n    // const isDevelopment = process.env.NODE_ENV !== \"production\";\n    const defaultport = 10000;\n    const port =\n        Number(参数object[\"port\"]) ||\n        defaultport + parseInt(String(10000 * Math.random()));\n    console.log(`\\nwebpack config filename : ${__filename}\\n`);\n    console.log(`\\nworking directory : ${process.cwd()}\\n`);\n    var __dirname = process.cwd();\n    console.log(`\\nwebpack mode : ${process.env.NODE_ENV} \\n`);\n    const webpackEnv = process.env.NODE_ENV;\n    const isEnvDevelopment = \"development\" === webpackEnv;\n    const shouldUseSourceMap = isEnvDevelopment;\n    const isEnvProduction = \"production\" === webpackEnv;\n    process.env.BABEL_ENV = process.env.NODE_ENV;\n    let publicPath = isEnvProduction ? \"./\" : \"/\";\n    if (\"production\" === process.env.NODE_ENV) {\n        if (解析参数publicpath) {\n            if (解析参数publicpath.length) {\n                console.log(`  output-public-path  :  ${解析参数publicpath}`);\n                console.log(\"\\n\");\n                publicPath = 解析参数publicpath;\n            }\n        }\n    }\n    const isservemode = !!env.WEBPACK_SERVE;\n    if (isEnvDevelopment && isservemode) {\n        console.log(\"open in browser: http://localhost:\" + port);\n    }\n    const srcfoldepath = path.join(__dirname);\n    const config: Configuration = {\n        stats: {\n            children: true,\n        },\n        target: isEnvDevelopment\n            ? \"web\"\n            : \"browserslist:\" +\n              [\">0.2%\", \"not dead\", \"not op_mini all\"].join(\",\"),\n        resolve: {\n            extensions: [\".ts\", \".js\", \".tsx\", \".jsx\", \".cjs\", \".mjs\"],\n\n            alias: {\n                \"@\": path.join(__dirname, \"src\"),\n                \"~\": path.join(__dirname),\n            },\n        },\n        devServer: {\n            //@ts-ignore\n            static: {\n                directory: path.join(__dirname, \"public\"),watch: true,\n            },\n            client: {\n                overlay: true,\n            },\n\n            host: \"0.0.0.0\",\n            compress: true,\n            historyApiFallback: true,\n            //@ts-ignore\n            contentBase: path.resolve(__dirname, \"./public\"),\n            hot: !0,\n            port,\n            // inline: !0,\n            // watchContentBase: !0,\n        },\n        devtool: isEnvDevelopment ? \"eval-cheap-module-source-map\" : false,\n        mode: mode,\n        entry: [\n            fs.existsSync(path.join(__dirname, \"src\", \"index.tsx\"))\n                ? path.join(__dirname, \"src\", \"index.tsx\")\n                : fs.existsSync(path.join(__dirname, \"src\", \"index.ts\"))\n                ? path.join(__dirname, \"src\", \"index.ts\")\n                : fs.existsSync(path.join(__dirname, \"src\", \"index.jsx\"))\n                ? path.join(__dirname, \"src\", \"index.jsx\")\n                : path.join(__dirname, \"src\", \"index.js\"),\n        ].filter(Boolean),\n        output: {\n            publicPath,\n            globalObject: `(typeof WorkerGlobalScope !== \"undefined\"?\n\nWorkerGlobalScope:\n\ntypeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : ( Function('return this')()))`,\n            filename: isEnvDevelopment\n                ? \"[name].[fullhash].js\"\n                : \"[name].[contenthash].js\",\n            path: path.join(__dirname, \"dist\"),\n            chunkFilename: isEnvDevelopment\n                ? \"[name].[fullhash].js\"\n                : \"[name].[contenthash].js\",\n        },\n        module: {\n            strictExportPresence: !0,\n            rules: [\n                {\n                    test: /\\.(js|mjs|jsx|ts|tsx)$/,\n                    type: \"javascript/auto\",\n                    loader: require.resolve(\"babel-loader\"),\n                    options: getbabelconfig(),\n                    include: [srcfoldepath],\n                    exclude: [/node_modules/],\n                },\n\n                {\n                    test: /\\.(less)$/,\n                    use: [\n                        isEnvDevelopment\n                            ? {\n                                  loader: require.resolve(\"style-loader\"),\n                                  options: {},\n                              }\n                            : {\n                                  loader: MiniCssExtractPlugin.loader,\n                              },\n                        {\n                            loader: require.resolve(\"css-loader\"),\n                            options: {\n                                importLoaders: 2,\n                                sourceMap: shouldUseSourceMap,\n                            },\n                        },\n                        {\n                            loader: require.resolve(\"postcss-loader\"),\n                            options: {\n                                postcssOptions: getpostcssoptions(),\n                                sourceMap: shouldUseSourceMap,\n                            },\n                        },\n                        {\n                            loader: require.resolve(\"less-loader\"),\n                            options: {\n                                sourceMap: shouldUseSourceMap,\n                            },\n                        },\n                    ],\n                },\n                {\n                    test: /\\.worker\\.(js|ts)$/,\n                    loader: require.resolve(\"worker-loader\"),\n                    options: {\n                        inline: \"no-fallback\",\n                    },\n                },\n                {\n                    test: /\\.vue$/,\n                    loader: require.resolve(resolvevueloadermodulepath()),\n                },\n                {\n                    test: /\\.(css|sass|scss)$/,\n                    use: [\n                        isEnvDevelopment\n                            ? {\n                                  loader: require.resolve(\"style-loader\"),\n                                  options: {},\n                              }\n                            : {\n                                  loader: MiniCssExtractPlugin.loader,\n                              },\n                        {\n                            loader: require.resolve(\"css-loader\"),\n                            options: {\n                                importLoaders: 2,\n                                sourceMap: shouldUseSourceMap,\n                            },\n                        },\n                        {\n                            loader: require.resolve(\"postcss-loader\"),\n                            options: {\n                                postcssOptions: getpostcssoptions(),\n                                sourceMap: shouldUseSourceMap,\n                            },\n                        },\n                        {\n                            loader: require.resolve(\"fast-sass-loader\"),\n                            options: {},\n                        },\n                    ],\n                },\n                // {\n                //     oneOf: [\n                //         {\n                //             test: [\n                //                 /\\.(png|jpg|jpeg|gif|webp|ico|bmp|svg)$/i,\n                //                 /\\.bmp$/,\n                //                 /\\.gif$/,\n                //                 /\\.jpe?g$/,\n                //                 /\\.png$/,\n                //                 /\\.svg$/,\n                //             ],\n                //             loader: require.resolve(\"url-loader\"),\n                //             options: {\n                //                 limit: 10000,\n                //                 name: isEnvDevelopment\n                //                     ? \"[path][name].[ext]\"\n                //                     : \"[name].[contenthash].[ext]\",\n                //             },\n                //         },\n\n                //         {\n                //             loader: require.resolve(\"file-loader\"),\n                //             exclude: [\n                //                 /\\.vue$/,\n                //                 /\\.(js|mjs|jsx|ts|tsx|cjs)$/,\n                //                 /\\.html$/,\n                //                 /\\.json$/,\n                //                 /\\.(css|scss|sass|less)$/,\n                //             ],\n                //             options: {\n                //                 name: isEnvDevelopment\n                //                     ? \"[path][name].[ext]\"\n                //                     : \"[name].[contenthash].[ext]\",\n                //             },\n                //         },\n                //     ],\n                // },\n\n                {\n                    test: /\\.(js|mjs)$/,\n                    exclude: [\n                        /@babel(?:\\/|\\\\{1,2})runtime/,\n                        path.resolve(__dirname, \"src\"),\n                    ],\n                    type: \"javascript/auto\",\n                    loader: require.resolve(\"babel-loader\"),\n                    options: {\n                        babelrc: !1,\n                        configFile: !1,\n                        compact: !1,\n                        presets: [\n                            isEnvProduction && [\n                                require.resolve(\"babel-preset-react-app\"),\n                                {},\n                            ],\n                            [\n                                require.resolve(\n                                    \"babel-preset-react-app/dependencies\"\n                                ),\n                                {\n                                    helpers: !0,\n                                },\n                            ],\n                        ].filter(Boolean),\n                        cacheDirectory: !0,\n                        cacheCompression: isEnvProduction,\n                        sourceMaps: shouldUseSourceMap,\n                    },\n                    include: [/node_modules/],\n                },\n\n                {\n                    test: /\\.(js|mjs|jsx|ts|tsx)$/,\n                    type: \"javascript/auto\",\n                    loader: require.resolve(\"babel-loader\"),\n                    options: {\n                        sourceMaps: shouldUseSourceMap,\n                        plugins: [].filter(Boolean),\n                        presets: [\n                            [\"@babel/preset-react\", { runtime: \"automatic\" }],\n                        ].filter(Boolean),\n\n                        babelrc: false,\n                        configFile: fs.existsSync(\n                            path.resolve(__dirname, \"babel.config.js\")\n                        )\n                            ? path.resolve(__dirname, \"babel.config.js\")\n                            : false,\n\n                        cacheDirectory: !0,\n                        cacheCompression: isEnvProduction,\n                        compact: isEnvProduction,\n                    },\n                    include: [srcfoldepath],\n                    exclude: [/node_modules/],\n                },\n\n                {\n                    include: [srcfoldepath],\n                    test: /\\.tsx?$/,\n                    //  type: \"javascript/auto\",\n                    exclude: /node_modules/,\n                    use: [\n                        {\n                            loader: require.resolve(\"ts-loader\"),\n                            options: {\n                                configFile: fs.existsSync(\n                                    path.resolve(__dirname, \"tsconfig.json\")\n                                )\n                                    ? path.resolve(__dirname, \"tsconfig.json\")\n                                    : false,\n\n                                compilerOptions: {\n                                    /*   jsx: isEnvProduction\n                                        ? \"react-jsx\"\n                                        : \"react-jsxdev\",*/\n                                    sourceMap: true,\n                                    strict: true,\n                                },\n                                // getCustomTransformers: () => ({\n                                //     before: isDevelopment\n                                //         ? [ReactRefreshTypeScript()]\n                                //         : [],\n                                // }),\n                                transpileOnly: true,\n                                appendTsSuffixTo: [/\\.vue$/],\n                            },\n                        },\n                    ],\n                },\n                {\n                    test: /\\.(png|jpe?g|webp|ico|bmp|gif|svg|eot|ttf|woff|woff2)$/i,\n                    // More information here https://webpack.js.org/guides/asset-modules/\n                    type: \"asset\",\n                },\n            ],\n        },\n        plugins: [\n            // isDevelopment && new ReactRefreshWebpackPlugin(),\n            new ForkTsCheckerWebpackPlugin({\n                typescript: {\n                    configOverwrite: {\n                        compilerOptions: { skipLibCheck: true, strict: true },\n                        include: [\"src\"],\n                    },\n                    configFile: fs.existsSync(\n                        path.resolve(__dirname, \"tsconfig.json\")\n                    )\n                        ? path.resolve(__dirname, \"tsconfig.json\")\n                        : false,\n                },\n            }),\n            isEnvProduction &&\n                new CleanWebpackPlugin({\n                    verbose: true,\n                }),\n            new CopyPlugin({\n                patterns: [\n                    {\n                        globOptions: {\n                            ignore: [\"**/index.html\"],\n                        },\n                        from: path.join(__dirname, \"public\"),\n                        toType: \"dir\",\n                        to: path.join(__dirname, \"dist\"),\n                        filter: (resourcePath: string) => {\n                            console.log(\"copy-webpack-plugin\", resourcePath);\n                            return true;\n                        },\n                    },\n                ],\n            }),\n            isEnvDevelopment && new webpack.HotModuleReplacementPlugin(),\n            isEnvProduction &&\n                new WorkboxWebpackPlugin.GenerateSW({\n                    skipWaiting: true,\n                    clientsClaim: !0,\n                    runtimeCaching: [\n                        {\n                            urlPattern: /.*\\.(?:js|html|\\/)$/,\n                            handler: \"NetworkFirst\",\n                            options: {},\n                        },\n                        {\n                            urlPattern: /.*\\.(?:xml|json|md|css)$/,\n                            handler: \"StaleWhileRevalidate\",\n                            options: {},\n                        },\n                        {\n                            urlPattern: /\\.(?:png|jpg|jpeg|svg|gif)$/,\n                            handler: \"CacheFirst\",\n                            options: {\n                                cacheName: \"image-cache\",\n                                expiration: {\n                                    maxEntries: 10,\n                                },\n                            },\n                        },\n                    ],\n                }),\n            new MiniCssExtractPlugin({\n                filename: \"[name].[contenthash].css\",\n                chunkFilename: \"[name].[contenthash].css\",\n            }),\n            new VueLoaderPlugin(),\n            new HtmlWebpackPlugin({\n                hash: false,\n                filename: \"index.html\",\n                title: \" Progressive Web Application\",\n                inject: !0,\n                minify: {\n                    removeComments: !0,\n                    collapseWhitespace: !0,\n                    removeRedundantAttributes: !0,\n                    useShortDoctype: !0,\n                    removeEmptyAttributes: !0,\n                    removeStyleLinkTypeAttributes: !0,\n                    keepClosingSlash: !0,\n                    minifyJS: !0,\n                    minifyCSS: !0,\n                    minifyURLs: !0,\n                    removeAttributeQuotes: !1,\n                },\n                template: path.join(__dirname, \"public\", \"index.html\"),\n            }),\n            new PreloadWebpackPlugin({\n                rel: \"preload\",\n                include: \"asyncChunks\",\n            }),\n        ].filter(Boolean),\n        optimization: {\n            moduleIds: isEnvDevelopment ? \"named\" : \"natural\",\n            chunkIds: isEnvDevelopment ? \"named\" : \"natural\",\n            usedExports: true,\n            runtimeChunk: \"single\",\n            splitChunks: isEnvProduction\n                ? {\n                      chunks: \"all\",\n                      minSize: 30000,\n                      maxSize: 70 * 1000,\n                      minChunks: 1,\n                      maxAsyncRequests: 5,\n                      maxInitialRequests: 5,\n                      name: false,\n                      usedExports: true,\n                      cacheGroups: {\n                          styles: {\n                              name: \"styles\",\n                              type: \"css/mini-extract\",\n\n                              // For webpack@4\n                              // test: /\\.css$/,\n\n                              chunks: \"all\",\n                              enforce: true,\n                          },\n                      },\n                  }\n                : {\n                      chunks: \"all\",\n                      maxSize: 20 * 1000,\n                  },\n            minimize: isEnvProduction,\n            minimizer: [\n                new TerserPlugin({\n                    terserOptions: {\n                        ecma: 5,\n                        parse: {\n                            ecma: 8,\n                        },\n                        compress: {\n                            warnings: !1,\n                            comparisons: !1,\n                            inline: 2,\n                            drop_console: true,\n                            drop_debugger: true,\n                            pure_funcs: [\"console.log\"],\n                        },\n                        mangle: {\n                            safari10: !0,\n                        },\n                        output: {\n                            ecma: 5,\n                            comments: !1,\n                            ascii_only: !0,\n                        },\n                    },\n                    parallel: !0,\n                }),\n                new OptimizeCSSAssetsPlugin({\n                    cssProcessorPluginOptions: {\n                        preset: [\n                            \"default\",\n                            {\n                                discardComments: {\n                                    removeAll: true,\n                                },\n                                normalizeUnicode: false,\n                            },\n                        ],\n                    },\n                    canPrint: true,\n                    cssProcessorOptions: {\n                        parser: safePostCssParser,\n                        map: !!shouldUseSourceMap && {\n                            inline: !1,\n                            annotation: !0,\n                        },\n                    },\n                }),\n            ],\n        },\n    };\n\n    function afterconfig(config: Configuration) {\n        if (isEnvDevelopment) {\n            try {\n                require(\"react\");\n            } catch (error) {\n                if (error?.code === \"MODULE_NOT_FOUND\") {\n                    return;\n                } else {\n                    throw error;\n                }\n            }\n            addreactfresh(config);\n        }\n    }\n\n    function getpostcssoptions() {\n        return {\n            config: fs.existsSync(path.resolve(__dirname, \"postcss.config.js\"))\n                ? path.resolve(__dirname, \"postcss.config.js\")\n                : false,\n\n            plugins: [\n                require(\"postcss-flexbugs-fixes\"),\n                require(\"postcss-preset-env\")({\n                    autoprefixer: {\n                        flexbox: \"no-2009\",\n                    },\n                    stage: 3,\n                }),\n                postcssNormalize(),\n            ],\n        };\n    }\n\n    function getbabelconfig() {\n        return {\n            sourceMaps: shouldUseSourceMap,\n            plugins: [\n                [\n                    require.resolve(\"babel-plugin-htm\"),\n                    {\n                        pragma: \"h\",\n                        tag: \"html\",\n                        useBuiltIns: true,\n                        useNativeSpread: true,\n                    },\n                ],\n                [\n                    \"@babel/plugin-proposal-private-methods\",\n                    {\n                        loose: true,\n                    },\n                ],\n                [\n                    require.resolve(\"@babel/plugin-proposal-decorators\"),\n                    {\n                        legacy: true,\n                    },\n                ],\n                [\n                    \"@babel/plugin-proposal-class-properties\",\n                    {\n                        loose: true,\n                    },\n                ],\n            ].filter(Boolean),\n            presets: [\n                [\"@babel/preset-react\", { runtime: \"automatic\" }],\n\n                require.resolve(\"@babel/preset-typescript\"),\n                isEnvProduction && [\n                    require.resolve(\"babel-preset-react-app\"),\n                    {},\n                ],\n            ].filter(Boolean),\n            customize: require.resolve(\n                \"babel-preset-react-app/webpack-overrides\"\n            ),\n            babelrc: false,\n            configFile: fs.existsSync(\n                path.resolve(__dirname, \"babel.config.js\")\n            )\n                ? path.resolve(__dirname, \"babel.config.js\")\n                : false,\n\n            cacheDirectory: !0,\n            cacheCompression: isEnvProduction,\n            compact: isEnvProduction,\n        };\n    }\n\n    function addreactfresh(config: Configuration) {\n        const ReactRefreshWebpackPlugin = require(\"@next/react-refresh-utils/ReactRefreshWebpackPlugin\")\n            .default;\n        config.entry = [\n            require.resolve(\"@next/react-refresh-utils/runtime\"),\n            ...config.entry,\n        ];\n        config.plugins = [new ReactRefreshWebpackPlugin(), ...config.plugins];\n        config.module.rules = [\n            {\n                test: /\\.(tsx|ts|js|mjs|jsx)$/,\n                include: [srcfoldepath],\n                exclude: [/node_modules/],\n                use: [require.resolve(\"@next/react-refresh-utils/loader\")],\n            },\n            ...config.module.rules,\n        ];\n    }\n    afterconfig(config);\n    return config;\n}\n"],"names":["env","argv","resolvevueloadermodulepath","vueversion","require","version","e","code","resolve","split","console","log","ForkTsCheckerWebpackPlugin","fs","CopyPlugin","WorkboxWebpackPlugin","safePostCssParser","OptimizeCSSAssetsPlugin","TerserPlugin","VueLoaderPlugin","MiniCssExtractPlugin","path","HtmlWebpackPlugin","webpack","postcssNormalize","PreloadWebpackPlugin","CleanWebpackPlugin","参数object","解析参数publicpath","mode","process","NODE_ENV","port","Number","parseInt","String","Math","random","__filename","cwd","__dirname","webpackEnv","isEnvDevelopment","shouldUseSourceMap","isEnvProduction","BABEL_ENV","publicPath","length","isservemode","WEBPACK_SERVE","srcfoldepath","join","config","stats","children","target","extensions","alias","devServer","static","directory","watch","client","overlay","host","compress","historyApiFallback","contentBase","hot","devtool","entry","existsSync","filter","Boolean","output","globalObject","filename","chunkFilename","module","strictExportPresence","rules","test","type","loader","options","sourceMaps","plugins","pragma","tag","useBuiltIns","useNativeSpread","loose","legacy","presets","runtime","customize","babelrc","configFile","cacheDirectory","cacheCompression","compact","include","exclude","use","importLoaders","sourceMap","postcssOptions","getpostcssoptions","inline","helpers","compilerOptions","strict","transpileOnly","appendTsSuffixTo","typescript","configOverwrite","skipLibCheck","verbose","patterns","globOptions","ignore","from","toType","to","resourcePath","HotModuleReplacementPlugin","GenerateSW","skipWaiting","clientsClaim","runtimeCaching","urlPattern","handler","cacheName","expiration","maxEntries","hash","title","inject","minify","removeComments","collapseWhitespace","removeRedundantAttributes","useShortDoctype","removeEmptyAttributes","removeStyleLinkTypeAttributes","keepClosingSlash","minifyJS","minifyCSS","minifyURLs","removeAttributeQuotes","template","rel","optimization","moduleIds","chunkIds","usedExports","runtimeChunk","splitChunks","chunks","minSize","maxSize","minChunks","maxAsyncRequests","maxInitialRequests","name","cacheGroups","styles","enforce","minimize","minimizer","terserOptions","ecma","parse","warnings","comparisons","drop_console","drop_debugger","pure_funcs","mangle","safari10","comments","ascii_only","parallel","cssProcessorPluginOptions","preset","discardComments","removeAll","normalizeUnicode","canPrint","cssProcessorOptions","parser","map","annotation","autoprefixer","flexbox","stage","error","ReactRefreshWebpackPlugin","default","addreactfresh","afterconfig"],"mappings":"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"}