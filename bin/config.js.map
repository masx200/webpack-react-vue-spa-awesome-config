{"version":3,"file":"config.js","sources":["../lib/config.ts"],"sourcesContent":["import type {\n    ModuleOptions,\n    RuleSetRule,\n    WebpackPluginInstance,\n} from \"webpack\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport TerserPlugin from \"terser-webpack-plugin\";\n(\"use strict\");\n\nexport type Configuration = import(\"webpack\").Configuration & {\n    entry: string[];\n    plugins: WebpackPluginInstance[];\n    module: ModuleOptions & { rules: RuleSetRule[] };\n} & { devServer: import(\"webpack-dev-server\").Configuration } & {\n    optimization: NonNullable<\n        import(\"webpack\").Configuration[\"optimization\"]\n    > & {\n        splitChunks: Nonfalseable<\n            NonNullable<\n                import(\"webpack\").Configuration[\"optimization\"]\n            >[\"splitChunks\"]\n        >;\n    };\n};\ntype Nonfalseable<T> = T extends false ? never : T;\nfunction resolvevueloadermodulepath() {\n    var vueversion;\n\n    try {\n        //@ts-ignore\n        vueversion = require(\"vue\").version;\n    } catch (e: any) {\n        if (e?.code === \"MODULE_NOT_FOUND\") {\n            return require.resolve(\"vue-loader\");\n        } else {\n            throw e;\n        }\n    }\n\n    if (\"3\" === vueversion.split(\".\")[0]) {\n        return require.resolve(\"vue-loader\");\n    } else {\n        return require.resolve(\"vue-loader\");\n    }\n}\nexport function createconfig(\n    env: Record<string, any>,\n    argv: Record<string, any>\n): Configuration {\n    console.log(\"env:\", env, \"\\n\", \"argv:\", argv);\n\n    // const ReactRefreshTypeScript = require(\"react-refresh-typescript\");\n    const ForkTsCheckerWebpackPlugin = require(\"fork-ts-checker-webpack-plugin\");\n    // const ReactRefreshWebpackPlugin = require(\"@pmmmwh/react-refresh-webpack-plugin\");\n\n    const CopyPlugin = require(\"copy-webpack-plugin\");\n    const WorkboxWebpackPlugin = require(\"workbox-webpack-plugin\");\n    const safePostCssParser = require(\"postcss-safe-parser\");\n    const OptimizeCSSAssetsPlugin = require(\"optimize-css-assets-webpack-plugin\");\n\n    const { VueLoaderPlugin } = require(resolvevueloadermodulepath());\n    const MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\n\n    const HtmlWebpackPlugin = require(\"html-webpack-plugin\");\n    const webpack = require(\"webpack\");\n\n    const PreloadWebpackPlugin = require(\"@vue/preload-webpack-plugin\");\n\n    const { CleanWebpackPlugin } = require(\"clean-webpack-plugin\");\n\n    const 参数object = argv;\n\n    const 解析参数publicpath = 参数object[\"output-public-path\"];\n    const mode = 参数object[\"mode\"];\n    process.env.NODE_ENV =\n        参数object[\"mode\"] === \"production\"\n            ? \"production\"\n            : 参数object[\"mode\"] === \"development\"\n            ? \"development\"\n            : process.env.NODE_ENV;\n    // const isDevelopment = process.env.NODE_ENV !== \"production\";\n    const defaultport = 10000;\n    const port =\n        Number(参数object[\"port\"]) ||\n        defaultport + parseInt(String(10000 * Math.random()));\n    console.log(`\\nwebpack config filename : ${__filename}\\n`);\n    console.log(`\\nworking directory : ${process.cwd()}\\n`);\n    var __dirname = process.cwd();\n    console.log(`\\nwebpack mode : ${process.env.NODE_ENV} \\n`);\n    const webpackEnv = process.env.NODE_ENV;\n    const isEnvDevelopment = \"development\" === webpackEnv;\n    const shouldUseSourceMap = isEnvDevelopment;\n    const isEnvProduction = \"production\" === webpackEnv;\n    process.env.BABEL_ENV = process.env.NODE_ENV;\n    let publicPath = isEnvProduction ? \"./\" : \"/\";\n    if (\"production\" === process.env.NODE_ENV) {\n        if (解析参数publicpath) {\n            if (解析参数publicpath.length) {\n                console.log(`  output-public-path  :  ${解析参数publicpath}`);\n                console.log(\"\\n\");\n                publicPath = 解析参数publicpath;\n            }\n        }\n    }\n    const isservemode = !!env.WEBPACK_SERVE;\n    if (isEnvDevelopment && isservemode) {\n        console.log(\"open in browser: http://localhost:\" + port);\n    }\n    const srcfoldepath = path.join(__dirname);\n    const config: Configuration = {\n        stats: {\n            children: true,\n        },\n        target: isEnvDevelopment\n            ? \"web\"\n            : \"browserslist:\" +\n              [\">0.2%\", \"not dead\", \"not op_mini all\"].join(\",\"),\n        resolve: {\n            extensions: [\".ts\", \".js\", \".tsx\", \".jsx\", \".cjs\", \".mjs\"],\n\n            alias: {\n                \"@\": path.join(__dirname, \"src\"),\n                \"~\": path.join(__dirname),\n            },\n        },\n        devServer: {\n            //@ts-ignore\n            static: {\n                directory: path.join(__dirname, \"public\"),\n                watch: true,\n            },\n            client: {\n                overlay: true,\n            },\n\n            host: \"0.0.0.0\",\n            compress: true,\n            historyApiFallback: true,\n            //@ts-ignore\n            // contentBase: path.resolve(__dirname, \"./public\"),\n            hot: !0,\n            port,\n            // inline: !0,\n            // watchContentBase: !0,\n        },\n        devtool: isEnvDevelopment ? \"eval-cheap-module-source-map\" : false,\n        mode: mode,\n        entry: [\n            fs.existsSync(path.join(__dirname, \"src\", \"index.tsx\"))\n                ? path.join(__dirname, \"src\", \"index.tsx\")\n                : fs.existsSync(path.join(__dirname, \"src\", \"index.ts\"))\n                ? path.join(__dirname, \"src\", \"index.ts\")\n                : fs.existsSync(path.join(__dirname, \"src\", \"index.jsx\"))\n                ? path.join(__dirname, \"src\", \"index.jsx\")\n                : path.join(__dirname, \"src\", \"index.js\"),\n        ].filter(Boolean),\n        output: {\n            publicPath,\n            globalObject: `(typeof WorkerGlobalScope !== \"undefined\"?\n\nWorkerGlobalScope:\n\ntypeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : ( Function('return this')()))`,\n            filename: isEnvDevelopment\n                ? \"[name].[fullhash].js\"\n                : \"[name].[contenthash].js\",\n            path: path.join(__dirname, \"dist\"),\n            chunkFilename: isEnvDevelopment\n                ? \"[name].[fullhash].js\"\n                : \"[name].[contenthash].js\",\n        },\n        module: {\n            strictExportPresence: !0,\n            rules: [\n                {\n                    test: /\\.(cjs|js|mjs|jsx|ts|tsx)$/,\n                    type: \"javascript/auto\",\n                    loader: require.resolve(\"babel-loader\"),\n                    options: getbabelconfig(\n                        shouldUseSourceMap,\n                        isEnvProduction\n                    ),\n                    include: [srcfoldepath],\n                    exclude: [/node_modules/],\n                },\n\n                {\n                    test: /\\.(less)$/,\n                    use: [\n                        isEnvDevelopment\n                            ? {\n                                  loader: require.resolve(\"style-loader\"),\n                                  options: {},\n                              }\n                            : {\n                                  loader: MiniCssExtractPlugin.loader,\n                              },\n                        {\n                            loader: require.resolve(\"css-loader\"),\n                            options: {\n                                importLoaders: 2,\n                                sourceMap: shouldUseSourceMap,\n                            },\n                        },\n                        {\n                            loader: require.resolve(\"postcss-loader\"),\n                            options: {\n                                postcssOptions: getpostcssoptions(),\n                                sourceMap: shouldUseSourceMap,\n                            },\n                        },\n                        {\n                            loader: require.resolve(\"less-loader\"),\n                            options: {\n                                sourceMap: shouldUseSourceMap,\n                            },\n                        },\n                    ],\n                },\n                {\n                    test: /\\.worker\\.(js|ts)$/,\n                    loader: require.resolve(\"worker-loader\"),\n                    options: {\n                        inline: \"no-fallback\",\n                    },\n                },\n                {\n                    test: /\\.vue$/,\n                    loader: require.resolve(resolvevueloadermodulepath()),\n                },\n                {\n                    test: /\\.(css)$/,\n                    use: [\n                        isEnvDevelopment\n                            ? {\n                                  loader: require.resolve(\"style-loader\"),\n                                  options: {},\n                              }\n                            : {\n                                  loader: MiniCssExtractPlugin.loader,\n                              },\n                        {\n                            loader: require.resolve(\"css-loader\"),\n                            options: {\n                                importLoaders: 1,\n                                sourceMap: shouldUseSourceMap,\n                            },\n                        },\n                        {\n                            loader: require.resolve(\"postcss-loader\"),\n                            options: {\n                                postcssOptions: getpostcssoptions(),\n                                sourceMap: shouldUseSourceMap,\n                            },\n                        },\n                        // {\n                        //     loader: require.resolve(\"fast-sass-loader\"),\n                        //     options: {},\n                        // },\n                    ],\n                },\n                {\n                    test: /\\.(sass|scss)$/,\n                    use: [\n                        isEnvDevelopment\n                            ? {\n                                  loader: require.resolve(\"style-loader\"),\n                                  options: {},\n                              }\n                            : {\n                                  loader: MiniCssExtractPlugin.loader,\n                              },\n                        {\n                            loader: require.resolve(\"css-loader\"),\n                            options: {\n                                importLoaders: 2,\n                                sourceMap: shouldUseSourceMap,\n                            },\n                        },\n                        {\n                            loader: require.resolve(\"postcss-loader\"),\n                            options: {\n                                postcssOptions: getpostcssoptions(),\n                                sourceMap: shouldUseSourceMap,\n                            },\n                        },\n                        {\n                            loader: require.resolve(\"fast-sass-loader\"),\n                            options: {},\n                        },\n                    ],\n                },\n                // {\n                //     oneOf: [\n                //         {\n                //             test: [\n                //                 /\\.(png|jpg|jpeg|gif|webp|ico|bmp|svg)$/i,\n                //                 /\\.bmp$/,\n                //                 /\\.gif$/,\n                //                 /\\.jpe?g$/,\n                //                 /\\.png$/,\n                //                 /\\.svg$/,\n                //             ],\n                //             loader: require.resolve(\"url-loader\"),\n                //             options: {\n                //                 limit: 10000,\n                //                 name: isEnvDevelopment\n                //                     ? \"[path][name].[ext]\"\n                //                     : \"[name].[contenthash].[ext]\",\n                //             },\n                //         },\n\n                //         {\n                //             loader: require.resolve(\"file-loader\"),\n                //             exclude: [\n                //                 /\\.vue$/,\n                //                 /\\.(js|mjs|jsx|ts|tsx|cjs)$/,\n                //                 /\\.html$/,\n                //                 /\\.json$/,\n                //                 /\\.(css|scss|sass|less)$/,\n                //             ],\n                //             options: {\n                //                 name: isEnvDevelopment\n                //                     ? \"[path][name].[ext]\"\n                //                     : \"[name].[contenthash].[ext]\",\n                //             },\n                //         },\n                //     ],\n                // },\n\n                {\n                    test: /\\.(js|mjs)$/,\n                    exclude: [\n                        /@babel(?:\\/|\\\\{1,2})runtime/,\n                        path.resolve(__dirname, \"src\"),\n                    ],\n                    type: \"javascript/auto\",\n                    loader: require.resolve(\"babel-loader\"),\n                    options: {\n                        babelrc: !1,\n                        configFile: !1,\n                        compact: !1,\n                        presets: [\n                            isEnvProduction && [\n                                require.resolve(\"babel-preset-react-app\"),\n                                {},\n                            ],\n                            [\n                                require.resolve(\n                                    \"babel-preset-react-app/dependencies\"\n                                ),\n                                {\n                                    helpers: !0,\n                                },\n                            ],\n                        ].filter(Boolean),\n                        cacheDirectory: !0,\n                        cacheCompression: isEnvProduction,\n                        sourceMaps: shouldUseSourceMap,\n                    },\n                    include: [/node_modules/],\n                },\n\n                {\n                    test: /\\.(js|mjs|jsx|ts|tsx)$/,\n                    type: \"javascript/auto\",\n                    loader: require.resolve(\"babel-loader\"),\n                    options: {\n                        sourceMaps: shouldUseSourceMap,\n                        plugins: [].filter(Boolean),\n                        presets: [\n                            [\"@babel/preset-react\", { runtime: \"automatic\" }],\n                        ].filter(Boolean),\n\n                        babelrc: false,\n                        configFile: fs.existsSync(\n                            path.resolve(__dirname, \"babel.config.js\")\n                        )\n                            ? path.resolve(__dirname, \"babel.config.js\")\n                            : false,\n\n                        cacheDirectory: !0,\n                        cacheCompression: isEnvProduction,\n                        compact: isEnvProduction,\n                    },\n                    include: [srcfoldepath],\n                    exclude: [/node_modules/],\n                },\n\n                {\n                    include: [srcfoldepath],\n                    test: /\\.tsx?$/,\n                    //  type: \"javascript/auto\",\n                    exclude: /node_modules/,\n                    use: [\n                        {\n                            loader: require.resolve(\"ts-loader\"),\n                            options: {\n                                configFile: fs.existsSync(\n                                    path.resolve(__dirname, \"tsconfig.json\")\n                                )\n                                    ? path.resolve(__dirname, \"tsconfig.json\")\n                                    : false,\n\n                                compilerOptions: {\n                                    /*   jsx: isEnvProduction\n                                        ? \"react-jsx\"\n                                        : \"react-jsxdev\",*/\n                                    sourceMap: true,\n                                    strict: true,\n                                },\n                                // getCustomTransformers: () => ({\n                                //     before: isDevelopment\n                                //         ? [ReactRefreshTypeScript()]\n                                //         : [],\n                                // }),\n                                transpileOnly: true,\n                                appendTsSuffixTo: [/\\.vue$/],\n                            },\n                        },\n                    ],\n                },\n                {\n                    test: /\\.(png|jpe?g|webp|ico|bmp|gif|svg|eot|ttf|woff|woff2)$/i,\n                    // More information here https://webpack.js.org/guides/asset-modules/\n                    type: \"asset\",\n                },\n            ],\n        },\n        plugins: [\n            // isDevelopment && new ReactRefreshWebpackPlugin(),\n            new ForkTsCheckerWebpackPlugin({\n                typescript: {\n                    configOverwrite: {\n                        compilerOptions: { skipLibCheck: true, strict: true },\n                        include: [\"src\"],\n                    },\n                    configFile: fs.existsSync(\n                        path.resolve(__dirname, \"tsconfig.json\")\n                    )\n                        ? path.resolve(__dirname, \"tsconfig.json\")\n                        : false,\n                },\n            }),\n            isEnvProduction &&\n                new CleanWebpackPlugin({\n                    verbose: true,\n                }),\n            new CopyPlugin({\n                patterns: [\n                    {\n                        globOptions: {\n                            ignore: [\"**/index.html\"],\n                        },\n                        from: path.join(__dirname, \"public\"),\n                        toType: \"dir\",\n                        to: path.join(__dirname, \"dist\"),\n                        filter: (resourcePath: string) => {\n                            console.log(\"copy-webpack-plugin\", resourcePath);\n                            return true;\n                        },\n                    },\n                ],\n            }),\n            isEnvDevelopment && new webpack.HotModuleReplacementPlugin(),\n            isEnvProduction &&\n                new WorkboxWebpackPlugin.GenerateSW({\n                    skipWaiting: true,\n                    clientsClaim: !0,\n                    runtimeCaching: [\n                        {\n                            urlPattern: /.*\\.(?:js|html|\\/)$/,\n                            handler: \"NetworkFirst\",\n                            options: {},\n                        },\n                        {\n                            urlPattern: /.*\\.(?:xml|json|md|css)$/,\n                            handler: \"StaleWhileRevalidate\",\n                            options: {},\n                        },\n                        {\n                            urlPattern: /\\.(?:png|jpg|jpeg|svg|gif)$/,\n                            handler: \"CacheFirst\",\n                            options: {\n                                cacheName: \"image-cache\",\n                                expiration: {\n                                    maxEntries: 10,\n                                },\n                            },\n                        },\n                    ],\n                }),\n            new MiniCssExtractPlugin({\n                filename: \"[name].[contenthash].css\",\n                chunkFilename: \"[name].[contenthash].css\",\n            }),\n            new VueLoaderPlugin(),\n            new HtmlWebpackPlugin({\n                hash: false,\n                filename: \"index.html\",\n                title: \" Progressive Web Application\",\n                inject: !0,\n                minify: {\n                    removeComments: !0,\n                    collapseWhitespace: !0,\n                    removeRedundantAttributes: !0,\n                    useShortDoctype: !0,\n                    removeEmptyAttributes: !0,\n                    removeStyleLinkTypeAttributes: !0,\n                    keepClosingSlash: !0,\n                    minifyJS: !0,\n                    minifyCSS: !0,\n                    minifyURLs: !0,\n                    removeAttributeQuotes: !1,\n                },\n                template: path.join(__dirname, \"public\", \"index.html\"),\n            }),\n            new PreloadWebpackPlugin({\n                rel: \"preload\",\n                include: \"asyncChunks\",\n            }),\n        ].filter(Boolean),\n        optimization: {\n            moduleIds: isEnvDevelopment ? \"named\" : \"natural\",\n            chunkIds: isEnvDevelopment ? \"named\" : \"natural\",\n            usedExports: true,\n            runtimeChunk: \"single\",\n            splitChunks: isEnvProduction\n                ? {\n                      chunks: \"all\",\n                      minSize: 30000,\n                      maxSize: 70 * 1000,\n                      minChunks: 1,\n                      maxAsyncRequests: 5,\n                      maxInitialRequests: 5,\n                      name: false,\n                      usedExports: true,\n                      cacheGroups: {\n                          styles: {\n                              name: \"styles\",\n                              type: \"css/mini-extract\",\n\n                              // For webpack@4\n                              // test: /\\.css$/,\n\n                              chunks: \"all\",\n                              enforce: true,\n                          },\n                      },\n                  }\n                : {\n                      chunks: \"all\",\n                      maxSize: 20 * 1000,\n                  },\n            minimize: isEnvProduction,\n            minimizer: [\n                createTerserPlugin(),\n                new OptimizeCSSAssetsPlugin({\n                    cssProcessorPluginOptions: {\n                        preset: [\n                            \"default\",\n                            {\n                                discardComments: {\n                                    removeAll: true,\n                                },\n                                normalizeUnicode: false,\n                            },\n                        ],\n                    },\n                    canPrint: true,\n                    cssProcessorOptions: {\n                        parser: safePostCssParser,\n                        map: !!shouldUseSourceMap && {\n                            inline: !1,\n                            annotation: !0,\n                        },\n                    },\n                }),\n            ],\n        },\n    };\n\n    afterconfig(config, isEnvDevelopment, srcfoldepath);\n    if (config.optimization.splitChunks) {\n        config.optimization.splitChunks.cacheGroups = {\n            ...config.optimization.splitChunks?.cacheGroups,\n\n            commons: {\n                test: /[\\\\/]node_modules[\\\\/]/,\n                name: \"vendors\",\n                chunks: \"initial\",\n            },\n        };\n    } else {\n        config.optimization.splitChunks = {};\n    }\n    return config;\n}\nfunction addreactfresh(config: Configuration, srcfoldepath: string) {\n    const ReactRefreshWebpackPlugin =\n        require(\"@next/react-refresh-utils/dist/ReactRefreshWebpackPlugin\").default;\n    config.entry = [\n        require.resolve(\"@next/react-refresh-utils/dist/runtime\"),\n        ...config.entry,\n    ];\n    config.plugins = [new ReactRefreshWebpackPlugin(), ...config.plugins];\n    config.module.rules = [\n        {\n            test: /\\.(tsx|ts|js|mjs|jsx)$/,\n            include: [srcfoldepath],\n            exclude: [/node_modules/],\n            use: [require.resolve(\"@next/react-refresh-utils/dist/loader\")],\n        },\n        ...config.module.rules,\n    ];\n}\nfunction createTerserPlugin() {\n    const terserconfig: {\n        // minify: typeof TerserPlugin.terserMinify;\n        parallel: boolean;\n        terserOptions: MinifyOptions;\n    } = {\n        // minify: TerserPlugin.terserMinify,\n        terserOptions: {\n            ecma: 5,\n            parse: {\n                ecma: 2015,\n            },\n            compress: {\n                // warnings: !1,\n                comparisons: !1,\n                inline: 2,\n                drop_console: true,\n                drop_debugger: true,\n                pure_funcs: [\"console.log\"],\n            },\n            mangle: {\n                safari10: !0,\n            },\n            output: {\n                ecma: 5,\n                comments: !1,\n                ascii_only: !0,\n            },\n        },\n        parallel: !0,\n    };\n    if (fs.existsSync(path.resolve(__dirname, \"terser.config.js\"))) {\n        const mergedconfig = merge.recursive(\n            true,\n            terserconfig,\n            require(path.resolve(__dirname, \"terser.config.js\"))\n        ) as typeof terserconfig;\n        //@ts-ignore\n        return new TerserPlugin<MinifyOptions>(mergedconfig);\n    }\n    //@ts-ignore\n    return new TerserPlugin<MinifyOptions>(terserconfig);\n}\nfunction afterconfig(\n    config: Configuration,\n    isEnvDevelopment: boolean,\n    srcfoldepath: string\n) {\n    if (isEnvDevelopment) {\n        try {\n            require(\"react\");\n        } catch (error: any) {\n            if (error?.code === \"MODULE_NOT_FOUND\") {\n                return;\n            } else {\n                throw error;\n            }\n        }\n        addreactfresh(config, srcfoldepath);\n    }\n}\nfunction getbabelconfig(shouldUseSourceMap: boolean, isEnvProduction: boolean) {\n    return {\n        sourceMaps: shouldUseSourceMap,\n        plugins: [\n            [\n                require.resolve(\"babel-plugin-htm\"),\n                {\n                    pragma: \"h\",\n                    tag: \"html\",\n                    useBuiltIns: true,\n                    useNativeSpread: true,\n                },\n            ],\n            [\n                \"@babel/plugin-proposal-private-methods\",\n                {\n                    loose: true,\n                },\n            ],\n            [\n                require.resolve(\"@babel/plugin-proposal-decorators\"),\n                {\n                    legacy: true,\n                },\n            ],\n            [\n                \"@babel/plugin-proposal-class-properties\",\n                {\n                    loose: true,\n                },\n            ],\n        ].filter(Boolean),\n        presets: [\n            [\"@babel/preset-react\", { runtime: \"automatic\" }],\n\n            require.resolve(\"@babel/preset-typescript\"),\n            isEnvProduction && [require.resolve(\"babel-preset-react-app\"), {}],\n        ].filter(Boolean),\n        customize: require.resolve(\"babel-preset-react-app/webpack-overrides\"),\n        babelrc: false,\n        configFile: fs.existsSync(path.resolve(__dirname, \"babel.config.js\"))\n            ? path.resolve(__dirname, \"babel.config.js\")\n            : false,\n\n        cacheDirectory: !0,\n        cacheCompression: isEnvProduction,\n        compact: isEnvProduction,\n    };\n}\nfunction getpostcssoptions() {\n    return {\n        config: fs.existsSync(path.resolve(__dirname, \"postcss.config.js\"))\n            ? path.resolve(__dirname, \"postcss.config.js\")\n            : false,\n\n        plugins: [\n            require(\"postcss-flexbugs-fixes\"),\n            require(\"postcss-preset-env\")({\n                autoprefixer: {\n                    flexbox: \"no-2009\",\n                },\n                stage: 3,\n            }),\n            postcssNormalize(),\n        ],\n    };\n}\nimport postcssNormalize from \"postcss-normalize\";\nimport merge from \"merge\";\nimport type { MinifyOptions } from \"terser\";\n"],"names":["resolvevueloadermodulepath","vueversion","require","version","e","code","resolve","split","createTerserPlugin","terserconfig","terserOptions","ecma","parse","compress","comparisons","inline","drop_console","drop_debugger","pure_funcs","mangle","safari10","output","comments","ascii_only","parallel","fs","existsSync","path","__dirname","mergedconfig","merge","recursive","TerserPlugin","getbabelconfig","shouldUseSourceMap","isEnvProduction","sourceMaps","plugins","pragma","tag","useBuiltIns","useNativeSpread","loose","legacy","filter","Boolean","presets","runtime","customize","babelrc","configFile","cacheDirectory","cacheCompression","compact","getpostcssoptions","config","autoprefixer","flexbox","stage","postcssNormalize","env","argv","console","log","ForkTsCheckerWebpackPlugin","CopyPlugin","WorkboxWebpackPlugin","safePostCssParser","OptimizeCSSAssetsPlugin","VueLoaderPlugin","MiniCssExtractPlugin","HtmlWebpackPlugin","webpack","PreloadWebpackPlugin","CleanWebpackPlugin","参数object","解析参数publicpath","mode","process","NODE_ENV","port","Number","parseInt","String","Math","random","__filename","cwd","webpackEnv","isEnvDevelopment","BABEL_ENV","publicPath","length","isservemode","WEBPACK_SERVE","srcfoldepath","join","stats","children","target","extensions","alias","devServer","static","directory","watch","client","overlay","host","historyApiFallback","hot","devtool","entry","globalObject","filename","chunkFilename","module","strictExportPresence","rules","test","type","loader","options","include","exclude","use","importLoaders","sourceMap","postcssOptions","helpers","compilerOptions","strict","transpileOnly","appendTsSuffixTo","typescript","configOverwrite","skipLibCheck","verbose","patterns","globOptions","ignore","from","toType","to","resourcePath","HotModuleReplacementPlugin","GenerateSW","skipWaiting","clientsClaim","runtimeCaching","urlPattern","handler","cacheName","expiration","maxEntries","hash","title","inject","minify","removeComments","collapseWhitespace","removeRedundantAttributes","useShortDoctype","removeEmptyAttributes","removeStyleLinkTypeAttributes","keepClosingSlash","minifyJS","minifyCSS","minifyURLs","removeAttributeQuotes","template","rel","optimization","moduleIds","chunkIds","usedExports","runtimeChunk","splitChunks","chunks","minSize","maxSize","minChunks","maxAsyncRequests","maxInitialRequests","name","cacheGroups","styles","enforce","minimize","minimizer","cssProcessorPluginOptions","preset","discardComments","removeAll","normalizeUnicode","canPrint","cssProcessorOptions","parser","map","annotation","error","ReactRefreshWebpackPlugin","default","addreactfresh","afterconfig","commons"],"mappings":"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"}