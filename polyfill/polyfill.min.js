!(function (t) {
    "use strict";
    function e(t) {
        return (e =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (t) {
                      return typeof t;
                  }
                : function (t) {
                      return t &&
                          "function" == typeof Symbol &&
                          t.constructor === Symbol &&
                          t !== Symbol.prototype
                          ? "symbol"
                          : typeof t;
                  })(t);
    }
    var r =
        "undefined" != typeof globalThis
            ? globalThis
            : "undefined" != typeof window
            ? window
            : "undefined" != typeof global
            ? global
            : "undefined" != typeof self
            ? self
            : {};
    function n(t) {
        if (t.__esModule) return t;
        var e = Object.defineProperty({}, "__esModule", { value: !0 });
        return (
            Object.keys(t).forEach(function (r) {
                var n = Object.getOwnPropertyDescriptor(t, r);
                Object.defineProperty(
                    e,
                    r,
                    n.get
                        ? n
                        : {
                              enumerable: !0,
                              get: function () {
                                  return t[r];
                              },
                          }
                );
            }),
            e
        );
    }
    var o = function (t) {
            var e = new XMLHttpRequest();
            e.open("GET", t, !1), e.send(null);
            var r = e.responseText;
            new Function(r)();
        },
        i = n(
            Object.freeze({
                __proto__: null,
                default: function () {
                    var t = "URLSearchParams" in self,
                        e = "Symbol" in self && "iterator" in Symbol,
                        r =
                            "FileReader" in self &&
                            "Blob" in self &&
                            (function () {
                                try {
                                    return new Blob(), !0;
                                } catch (t) {
                                    return !1;
                                }
                            })(),
                        n = "FormData" in self,
                        o = "ArrayBuffer" in self;
                    if (o)
                        var i = [
                                "[object Int8Array]",
                                "[object Uint8Array]",
                                "[object Uint8ClampedArray]",
                                "[object Int16Array]",
                                "[object Uint16Array]",
                                "[object Int32Array]",
                                "[object Uint32Array]",
                                "[object Float32Array]",
                                "[object Float64Array]",
                            ],
                            a =
                                ArrayBuffer.isView ||
                                function (t) {
                                    return (
                                        t &&
                                        i.indexOf(
                                            Object.prototype.toString.call(t)
                                        ) > -1
                                    );
                                };
                    function s(t) {
                        if (
                            ("string" != typeof t && (t = String(t)),
                            /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(t))
                        )
                            throw new TypeError(
                                "Invalid character in header field name"
                            );
                        return t.toLowerCase();
                    }
                    function u(t) {
                        return "string" != typeof t && (t = String(t)), t;
                    }
                    function c(t) {
                        var r = {
                            next: function () {
                                var e = t.shift();
                                return { done: void 0 === e, value: e };
                            },
                        };
                        return (
                            e &&
                                (r[Symbol.iterator] = function () {
                                    return r;
                                }),
                            r
                        );
                    }
                    function f(t) {
                        (this.map = {}),
                            t instanceof f
                                ? t.forEach(function (t, e) {
                                      this.append(e, t);
                                  }, this)
                                : Array.isArray(t)
                                ? t.forEach(function (t) {
                                      this.append(t[0], t[1]);
                                  }, this)
                                : t &&
                                  Object.getOwnPropertyNames(t).forEach(
                                      function (e) {
                                          this.append(e, t[e]);
                                      },
                                      this
                                  );
                    }
                    function h(t) {
                        if (t.bodyUsed)
                            return Promise.reject(
                                new TypeError("Already read")
                            );
                        t.bodyUsed = !0;
                    }
                    function l(t) {
                        return new Promise(function (e, r) {
                            (t.onload = function () {
                                e(t.result);
                            }),
                                (t.onerror = function () {
                                    r(t.error);
                                });
                        });
                    }
                    function p(t) {
                        var e = new FileReader(),
                            r = l(e);
                        return e.readAsArrayBuffer(t), r;
                    }
                    function y(t) {
                        if (t.slice) return t.slice(0);
                        var e = new Uint8Array(t.byteLength);
                        return e.set(new Uint8Array(t)), e.buffer;
                    }
                    function d() {
                        return (
                            (this.bodyUsed = !1),
                            (this._initBody = function (e) {
                                (this._bodyInit = e),
                                    e
                                        ? "string" == typeof e
                                            ? (this._bodyText = e)
                                            : r &&
                                              Blob.prototype.isPrototypeOf(e)
                                            ? (this._bodyBlob = e)
                                            : n &&
                                              FormData.prototype.isPrototypeOf(
                                                  e
                                              )
                                            ? (this._bodyFormData = e)
                                            : t &&
                                              URLSearchParams.prototype.isPrototypeOf(
                                                  e
                                              )
                                            ? (this._bodyText = e.toString())
                                            : o &&
                                              r &&
                                              (function (t) {
                                                  return (
                                                      t &&
                                                      DataView.prototype.isPrototypeOf(
                                                          t
                                                      )
                                                  );
                                              })(e)
                                            ? ((this._bodyArrayBuffer = y(
                                                  e.buffer
                                              )),
                                              (this._bodyInit = new Blob([
                                                  this._bodyArrayBuffer,
                                              ])))
                                            : o &&
                                              (ArrayBuffer.prototype.isPrototypeOf(
                                                  e
                                              ) ||
                                                  a(e))
                                            ? (this._bodyArrayBuffer = y(e))
                                            : (this._bodyText = e =
                                                  Object.prototype.toString.call(
                                                      e
                                                  ))
                                        : (this._bodyText = ""),
                                    this.headers.get("content-type") ||
                                        ("string" == typeof e
                                            ? this.headers.set(
                                                  "content-type",
                                                  "text/plain;charset=UTF-8"
                                              )
                                            : this._bodyBlob &&
                                              this._bodyBlob.type
                                            ? this.headers.set(
                                                  "content-type",
                                                  this._bodyBlob.type
                                              )
                                            : t &&
                                              URLSearchParams.prototype.isPrototypeOf(
                                                  e
                                              ) &&
                                              this.headers.set(
                                                  "content-type",
                                                  "application/x-www-form-urlencoded;charset=UTF-8"
                                              ));
                            }),
                            r &&
                                ((this.blob = function () {
                                    var t = h(this);
                                    if (t) return t;
                                    if (this._bodyBlob)
                                        return Promise.resolve(this._bodyBlob);
                                    if (this._bodyArrayBuffer)
                                        return Promise.resolve(
                                            new Blob([this._bodyArrayBuffer])
                                        );
                                    if (this._bodyFormData)
                                        throw new Error(
                                            "could not read FormData body as blob"
                                        );
                                    return Promise.resolve(
                                        new Blob([this._bodyText])
                                    );
                                }),
                                (this.arrayBuffer = function () {
                                    return this._bodyArrayBuffer
                                        ? h(this) ||
                                              Promise.resolve(
                                                  this._bodyArrayBuffer
                                              )
                                        : this.blob().then(p);
                                })),
                            (this.text = function () {
                                var t = h(this);
                                if (t) return t;
                                if (this._bodyBlob)
                                    return (function (t) {
                                        var e = new FileReader(),
                                            r = l(e);
                                        return e.readAsText(t), r;
                                    })(this._bodyBlob);
                                if (this._bodyArrayBuffer)
                                    return Promise.resolve(
                                        (function (t) {
                                            for (
                                                var e = new Uint8Array(t),
                                                    r = new Array(e.length),
                                                    n = 0;
                                                n < e.length;
                                                n++
                                            )
                                                r[n] = String.fromCharCode(
                                                    e[n]
                                                );
                                            return r.join("");
                                        })(this._bodyArrayBuffer)
                                    );
                                if (this._bodyFormData)
                                    throw new Error(
                                        "could not read FormData body as text"
                                    );
                                return Promise.resolve(this._bodyText);
                            }),
                            n &&
                                (this.formData = function () {
                                    return this.text().then(v);
                                }),
                            (this.json = function () {
                                return this.text().then(JSON.parse);
                            }),
                            this
                        );
                    }
                    (f.prototype.append = function (t, e) {
                        (t = s(t)), (e = u(e));
                        var r = this.map[t];
                        this.map[t] = r ? r + ", " + e : e;
                    }),
                        (f.prototype.delete = function (t) {
                            delete this.map[s(t)];
                        }),
                        (f.prototype.get = function (t) {
                            return (t = s(t)), this.has(t) ? this.map[t] : null;
                        }),
                        (f.prototype.has = function (t) {
                            return this.map.hasOwnProperty(s(t));
                        }),
                        (f.prototype.set = function (t, e) {
                            this.map[s(t)] = u(e);
                        }),
                        (f.prototype.forEach = function (t, e) {
                            for (var r in this.map)
                                this.map.hasOwnProperty(r) &&
                                    t.call(e, this.map[r], r, this);
                        }),
                        (f.prototype.keys = function () {
                            var t = [];
                            return (
                                this.forEach(function (e, r) {
                                    t.push(r);
                                }),
                                c(t)
                            );
                        }),
                        (f.prototype.values = function () {
                            var t = [];
                            return (
                                this.forEach(function (e) {
                                    t.push(e);
                                }),
                                c(t)
                            );
                        }),
                        (f.prototype.entries = function () {
                            var t = [];
                            return (
                                this.forEach(function (e, r) {
                                    t.push([r, e]);
                                }),
                                c(t)
                            );
                        }),
                        e &&
                            (f.prototype[Symbol.iterator] =
                                f.prototype.entries);
                    var b = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
                    function m(t, e) {
                        var r = (e = e || {}).body;
                        if (t instanceof m) {
                            if (t.bodyUsed) throw new TypeError("Already read");
                            (this.url = t.url),
                                (this.credentials = t.credentials),
                                e.headers || (this.headers = new f(t.headers)),
                                (this.method = t.method),
                                (this.mode = t.mode),
                                (this.signal = t.signal),
                                r ||
                                    null == t._bodyInit ||
                                    ((r = t._bodyInit), (t.bodyUsed = !0));
                        } else this.url = String(t);
                        if (
                            ((this.credentials =
                                e.credentials ||
                                this.credentials ||
                                "same-origin"),
                            (!e.headers && this.headers) ||
                                (this.headers = new f(e.headers)),
                            (this.method = (function (t) {
                                var e = t.toUpperCase();
                                return b.indexOf(e) > -1 ? e : t;
                            })(e.method || this.method || "GET")),
                            (this.mode = e.mode || this.mode || null),
                            (this.signal = e.signal || this.signal),
                            (this.referrer = null),
                            ("GET" === this.method || "HEAD" === this.method) &&
                                r)
                        )
                            throw new TypeError(
                                "Body not allowed for GET or HEAD requests"
                            );
                        this._initBody(r);
                    }
                    function v(t) {
                        var e = new FormData();
                        return (
                            t
                                .trim()
                                .split("&")
                                .forEach(function (t) {
                                    if (t) {
                                        var r = t.split("="),
                                            n = r.shift().replace(/\+/g, " "),
                                            o = r.join("=").replace(/\+/g, " ");
                                        e.append(
                                            decodeURIComponent(n),
                                            decodeURIComponent(o)
                                        );
                                    }
                                }),
                            e
                        );
                    }
                    function w(t) {
                        var e = new f();
                        return (
                            t
                                .replace(/\r?\n[\t ]+/g, " ")
                                .split(/\r?\n/)
                                .forEach(function (t) {
                                    var r = t.split(":"),
                                        n = r.shift().trim();
                                    if (n) {
                                        var o = r.join(":").trim();
                                        e.append(n, o);
                                    }
                                }),
                            e
                        );
                    }
                    function g(t, e) {
                        e || (e = {}),
                            (this.type = "default"),
                            (this.status =
                                void 0 === e.status ? 200 : e.status),
                            (this.ok = this.status >= 200 && this.status < 300),
                            (this.statusText =
                                "statusText" in e ? e.statusText : "OK"),
                            (this.headers = new f(e.headers)),
                            (this.url = e.url || ""),
                            this._initBody(t);
                    }
                    (m.prototype.clone = function () {
                        return new m(this, { body: this._bodyInit });
                    }),
                        d.call(m.prototype),
                        d.call(g.prototype),
                        (g.prototype.clone = function () {
                            return new g(this._bodyInit, {
                                status: this.status,
                                statusText: this.statusText,
                                headers: new f(this.headers),
                                url: this.url,
                            });
                        }),
                        (g.error = function () {
                            var t = new g(null, { status: 0, statusText: "" });
                            return (t.type = "error"), t;
                        });
                    var E = [301, 302, 303, 307, 308];
                    g.redirect = function (t, e) {
                        if (-1 === E.indexOf(e))
                            throw new RangeError("Invalid status code");
                        return new g(null, {
                            status: e,
                            headers: { location: t },
                        });
                    };
                    var _ = self.DOMException;
                    try {
                        new _();
                    } catch (t) {
                        ((_ = function (t, e) {
                            (this.message = t), (this.name = e);
                            var r = Error(t);
                            this.stack = r.stack;
                        }).prototype = Object.create(Error.prototype)),
                            (_.prototype.constructor = _);
                    }
                    function S(t, e) {
                        return new Promise(function (n, o) {
                            var i = new m(t, e);
                            if (i.signal && i.signal.aborted)
                                return o(new _("Aborted", "AbortError"));
                            var a = new XMLHttpRequest();
                            function s() {
                                a.abort();
                            }
                            (a.onload = function () {
                                var t = {
                                    status: a.status,
                                    statusText: a.statusText,
                                    headers: w(a.getAllResponseHeaders() || ""),
                                };
                                t.url =
                                    "responseURL" in a
                                        ? a.responseURL
                                        : t.headers.get("X-Request-URL");
                                var e =
                                    "response" in a
                                        ? a.response
                                        : a.responseText;
                                n(new g(e, t));
                            }),
                                (a.onerror = function () {
                                    o(new TypeError("Network request failed"));
                                }),
                                (a.ontimeout = function () {
                                    o(new TypeError("Network request failed"));
                                }),
                                (a.onabort = function () {
                                    o(new _("Aborted", "AbortError"));
                                }),
                                a.open(i.method, i.url, !0),
                                "include" === i.credentials
                                    ? (a.withCredentials = !0)
                                    : "omit" === i.credentials &&
                                      (a.withCredentials = !1),
                                "responseType" in a &&
                                    r &&
                                    (a.responseType = "blob"),
                                i.headers.forEach(function (t, e) {
                                    a.setRequestHeader(e, t);
                                }),
                                i.signal &&
                                    (i.signal.addEventListener("abort", s),
                                    (a.onreadystatechange = function () {
                                        4 === a.readyState &&
                                            i.signal.removeEventListener(
                                                "abort",
                                                s
                                            );
                                    })),
                                a.send(
                                    void 0 === i._bodyInit ? null : i._bodyInit
                                );
                        });
                    }
                    (S.polyfill = !0),
                        self.fetch ||
                            ((self.fetch = S),
                            (self.Headers = f),
                            (self.Request = m),
                            (self.Response = g));
                },
            })
        ),
        a = void 0,
        s = n(
            Object.freeze({
                __proto__: null,
                default: function () {
                    !(function (t) {
                        var r = (function () {
                                try {
                                    return !!Symbol.iterator;
                                } catch (t) {
                                    return !1;
                                }
                            })(),
                            n = function (t) {
                                var e = {
                                    next: function () {
                                        var e = t.shift();
                                        return { done: void 0 === e, value: e };
                                    },
                                };
                                return (
                                    r &&
                                        (e[Symbol.iterator] = function () {
                                            return e;
                                        }),
                                    e
                                );
                            },
                            o = function (t) {
                                return encodeURIComponent(t).replace(
                                    /%20/g,
                                    "+"
                                );
                            },
                            i = function (t) {
                                return decodeURIComponent(
                                    String(t).replace(/\+/g, " ")
                                );
                            };
                        (function () {
                            try {
                                var e = t.URLSearchParams;
                                return (
                                    "a=1" === new e("?a=1").toString() &&
                                    "function" == typeof e.prototype.set
                                );
                            } catch (e) {
                                return !1;
                            }
                        })() ||
                            (function () {
                                var i = function t(r) {
                                        Object.defineProperty(
                                            this,
                                            "_entries",
                                            { writable: !0, value: {} }
                                        );
                                        var n = e(r);
                                        if ("undefined" === n);
                                        else if ("string" === n)
                                            "" !== r && this._fromString(r);
                                        else if (r instanceof t) {
                                            var o = this;
                                            r.forEach(function (t, e) {
                                                o.append(e, t);
                                            });
                                        } else {
                                            if (null === r || "object" !== n)
                                                throw new TypeError(
                                                    "Unsupported input's type for URLSearchParams"
                                                );
                                            if (
                                                "[object Array]" ===
                                                Object.prototype.toString.call(
                                                    r
                                                )
                                            )
                                                for (
                                                    var i = 0;
                                                    i < r.length;
                                                    i++
                                                ) {
                                                    var a = r[i];
                                                    if (
                                                        "[object Array]" !==
                                                            Object.prototype.toString.call(
                                                                a
                                                            ) &&
                                                        2 === a.length
                                                    )
                                                        throw new TypeError(
                                                            "Expected [string, any] as entry at index " +
                                                                i +
                                                                " of URLSearchParams's input"
                                                        );
                                                    this.append(a[0], a[1]);
                                                }
                                            else
                                                for (var s in r)
                                                    r.hasOwnProperty(s) &&
                                                        this.append(s, r[s]);
                                        }
                                    },
                                    a = i.prototype;
                                (a.append = function (t, e) {
                                    t in this._entries
                                        ? this._entries[t].push(String(e))
                                        : (this._entries[t] = [String(e)]);
                                }),
                                    (a.delete = function (t) {
                                        delete this._entries[t];
                                    }),
                                    (a.get = function (t) {
                                        return t in this._entries
                                            ? this._entries[t][0]
                                            : null;
                                    }),
                                    (a.getAll = function (t) {
                                        return t in this._entries
                                            ? this._entries[t].slice(0)
                                            : [];
                                    }),
                                    (a.has = function (t) {
                                        return t in this._entries;
                                    }),
                                    (a.set = function (t, e) {
                                        this._entries[t] = [String(e)];
                                    }),
                                    (a.forEach = function (t, e) {
                                        var r;
                                        for (var n in this._entries)
                                            if (
                                                this._entries.hasOwnProperty(n)
                                            ) {
                                                r = this._entries[n];
                                                for (
                                                    var o = 0;
                                                    o < r.length;
                                                    o++
                                                )
                                                    t.call(e, r[o], n, this);
                                            }
                                    }),
                                    (a.keys = function () {
                                        var t = [];
                                        return (
                                            this.forEach(function (e, r) {
                                                t.push(r);
                                            }),
                                            n(t)
                                        );
                                    }),
                                    (a.values = function () {
                                        var t = [];
                                        return (
                                            this.forEach(function (e) {
                                                t.push(e);
                                            }),
                                            n(t)
                                        );
                                    }),
                                    (a.entries = function () {
                                        var t = [];
                                        return (
                                            this.forEach(function (e, r) {
                                                t.push([r, e]);
                                            }),
                                            n(t)
                                        );
                                    }),
                                    r && (a[Symbol.iterator] = a.entries),
                                    (a.toString = function () {
                                        var t = [];
                                        return (
                                            this.forEach(function (e, r) {
                                                t.push(o(r) + "=" + o(e));
                                            }),
                                            t.join("&")
                                        );
                                    }),
                                    (t.URLSearchParams = i);
                            })();
                        var a = t.URLSearchParams.prototype;
                        "function" != typeof a.sort &&
                            (a.sort = function () {
                                var t = this,
                                    e = [];
                                this.forEach(function (r, n) {
                                    e.push([n, r]), t._entries || t.delete(n);
                                }),
                                    e.sort(function (t, e) {
                                        return t[0] < e[0]
                                            ? -1
                                            : t[0] > e[0]
                                            ? 1
                                            : 0;
                                    }),
                                    t._entries && (t._entries = {});
                                for (var r = 0; r < e.length; r++)
                                    this.append(e[r][0], e[r][1]);
                            }),
                            "function" != typeof a._fromString &&
                                Object.defineProperty(a, "_fromString", {
                                    enumerable: !1,
                                    configurable: !1,
                                    writable: !1,
                                    value: function (t) {
                                        if (this._entries) this._entries = {};
                                        else {
                                            var e = [];
                                            this.forEach(function (t, r) {
                                                e.push(r);
                                            });
                                            for (var r = 0; r < e.length; r++)
                                                this.delete(e[r]);
                                        }
                                        var n,
                                            o = (t = t.replace(
                                                /^\?/,
                                                ""
                                            )).split("&");
                                        for (r = 0; r < o.length; r++)
                                            (n = o[r].split("=")),
                                                this.append(
                                                    i(n[0]),
                                                    n.length > 1 ? i(n[1]) : ""
                                                );
                                    },
                                });
                    })(
                        "undefined" != typeof global
                            ? global
                            : "undefined" != typeof window
                            ? window
                            : "undefined" != typeof self
                            ? self
                            : a
                    ),
                        (function (t) {
                            if (
                                ((function () {
                                    try {
                                        var e = new t.URL("b", "http://a");
                                        return (
                                            (e.pathname = "c%20d"),
                                            "http://a/c%20d" === e.href &&
                                                e.searchParams
                                        );
                                    } catch (e) {
                                        return !1;
                                    }
                                })() ||
                                    (function () {
                                        var e = t.URL,
                                            r = function e(r, n) {
                                                "string" != typeof r &&
                                                    (r = String(r));
                                                var o,
                                                    i = document;
                                                if (
                                                    n &&
                                                    (void 0 === t.location ||
                                                        n !== t.location.href)
                                                ) {
                                                    ((o = (i =
                                                        document.implementation.createHTMLDocument(
                                                            ""
                                                        )).createElement(
                                                        "base"
                                                    )).href = n),
                                                        i.head.appendChild(o);
                                                    try {
                                                        if (
                                                            0 !==
                                                            o.href.indexOf(n)
                                                        )
                                                            throw new Error(
                                                                o.href
                                                            );
                                                    } catch (e) {
                                                        throw new Error(
                                                            "URL unable to set base " +
                                                                n +
                                                                " due to " +
                                                                e
                                                        );
                                                    }
                                                }
                                                var a = i.createElement("a");
                                                if (
                                                    ((a.href = r),
                                                    o &&
                                                        (i.body.appendChild(a),
                                                        (a.href = a.href)),
                                                    ":" === a.protocol ||
                                                        !/:/.test(a.href))
                                                )
                                                    throw new TypeError(
                                                        "Invalid URL"
                                                    );
                                                Object.defineProperty(
                                                    this,
                                                    "_anchorElement",
                                                    { value: a }
                                                );
                                                var s = new t.URLSearchParams(
                                                        this.search
                                                    ),
                                                    u = !0,
                                                    c = !0,
                                                    f = this;
                                                [
                                                    "append",
                                                    "delete",
                                                    "set",
                                                ].forEach(function (t) {
                                                    var e = s[t];
                                                    s[t] = function () {
                                                        e.apply(s, arguments),
                                                            u &&
                                                                ((c = !1),
                                                                (f.search =
                                                                    s.toString()),
                                                                (c = !0));
                                                    };
                                                }),
                                                    Object.defineProperty(
                                                        this,
                                                        "searchParams",
                                                        {
                                                            value: s,
                                                            enumerable: !0,
                                                        }
                                                    );
                                                var h = void 0;
                                                Object.defineProperty(
                                                    this,
                                                    "_updateSearchParams",
                                                    {
                                                        enumerable: !1,
                                                        configurable: !1,
                                                        writable: !1,
                                                        value: function () {
                                                            this.search !== h &&
                                                                ((h =
                                                                    this
                                                                        .search),
                                                                c &&
                                                                    ((u = !1),
                                                                    this.searchParams._fromString(
                                                                        this
                                                                            .search
                                                                    ),
                                                                    (u = !0)));
                                                        },
                                                    }
                                                );
                                            },
                                            n = r.prototype;
                                        [
                                            "hash",
                                            "host",
                                            "hostname",
                                            "port",
                                            "protocol",
                                        ].forEach(function (t) {
                                            !(function (t) {
                                                Object.defineProperty(n, t, {
                                                    get: function () {
                                                        return this
                                                            ._anchorElement[t];
                                                    },
                                                    set: function (e) {
                                                        this._anchorElement[t] =
                                                            e;
                                                    },
                                                    enumerable: !0,
                                                });
                                            })(t);
                                        }),
                                            Object.defineProperty(n, "search", {
                                                get: function () {
                                                    return this._anchorElement
                                                        .search;
                                                },
                                                set: function (t) {
                                                    (this._anchorElement.search =
                                                        t),
                                                        this._updateSearchParams();
                                                },
                                                enumerable: !0,
                                            }),
                                            Object.defineProperties(n, {
                                                toString: {
                                                    get: function () {
                                                        var t = this;
                                                        return function () {
                                                            return t.href;
                                                        };
                                                    },
                                                },
                                                href: {
                                                    get: function () {
                                                        return this._anchorElement.href.replace(
                                                            /\?$/,
                                                            ""
                                                        );
                                                    },
                                                    set: function (t) {
                                                        (this._anchorElement.href =
                                                            t),
                                                            this._updateSearchParams();
                                                    },
                                                    enumerable: !0,
                                                },
                                                pathname: {
                                                    get: function () {
                                                        return this._anchorElement.pathname.replace(
                                                            /(^\/?)/,
                                                            "/"
                                                        );
                                                    },
                                                    set: function (t) {
                                                        this._anchorElement.pathname =
                                                            t;
                                                    },
                                                    enumerable: !0,
                                                },
                                                origin: {
                                                    get: function () {
                                                        var t = {
                                                                "http:": 80,
                                                                "https:": 443,
                                                                "ftp:": 21,
                                                            }[
                                                                this
                                                                    ._anchorElement
                                                                    .protocol
                                                            ],
                                                            e =
                                                                this
                                                                    ._anchorElement
                                                                    .port !=
                                                                    t &&
                                                                "" !==
                                                                    this
                                                                        ._anchorElement
                                                                        .port;
                                                        return (
                                                            this._anchorElement
                                                                .protocol +
                                                            "//" +
                                                            this._anchorElement
                                                                .hostname +
                                                            (e
                                                                ? ":" +
                                                                  this
                                                                      ._anchorElement
                                                                      .port
                                                                : "")
                                                        );
                                                    },
                                                    enumerable: !0,
                                                },
                                                password: {
                                                    get: function () {
                                                        return "";
                                                    },
                                                    set: function (t) {},
                                                    enumerable: !0,
                                                },
                                                username: {
                                                    get: function () {
                                                        return "";
                                                    },
                                                    set: function (t) {},
                                                    enumerable: !0,
                                                },
                                            }),
                                            (r.createObjectURL = function (t) {
                                                return e.createObjectURL.apply(
                                                    e,
                                                    arguments
                                                );
                                            }),
                                            (r.revokeObjectURL = function (t) {
                                                return e.revokeObjectURL.apply(
                                                    e,
                                                    arguments
                                                );
                                            }),
                                            (t.URL = r);
                                    })(),
                                void 0 !== t.location &&
                                    !("origin" in t.location))
                            ) {
                                var e = function () {
                                    return (
                                        t.location.protocol +
                                        "//" +
                                        t.location.hostname +
                                        (t.location.port
                                            ? ":" + t.location.port
                                            : "")
                                    );
                                };
                                try {
                                    Object.defineProperty(
                                        t.location,
                                        "origin",
                                        { get: e, enumerable: !0 }
                                    );
                                } catch (r) {
                                    setInterval(function () {
                                        t.location.origin = e();
                                    }, 100);
                                }
                            }
                        })(
                            "undefined" != typeof global
                                ? global
                                : "undefined" != typeof window
                                ? window
                                : "undefined" != typeof self
                                ? self
                                : a
                        );
                },
            })
        ),
        u = n(
            Object.freeze({
                __proto__: null,
                default: function () {
                    !(function () {
                        var t = window.Event || {};
                        function e(t, e) {
                            if (((e = e || {}), "string" != typeof t))
                                throw new TypeError("invalid type");
                            var r = document.createEvent("Event");
                            return (
                                r.initEvent(t, !!e.bubbles, !!e.cancelable), r
                            );
                        }
                        "function" != typeof window.Event &&
                            (Object.keys(t).forEach(function (r) {
                                e[r] = t[r];
                            }),
                            (e.prototype = t.prototype || {}),
                            (window.Event = e));
                    })(),
                        (function () {
                            var t = window.CustomEvent || {};
                            function e(t, e) {
                                if (((e = e || {}), "string" != typeof t))
                                    throw new TypeError("invalid type");
                                var r = document.createEvent("CustomEvent");
                                return (
                                    r.initCustomEvent(
                                        t,
                                        !!e.bubbles,
                                        !!e.cancelable,
                                        e.detail
                                    ),
                                    r
                                );
                            }
                            "function" != typeof window.CustomEvent &&
                                (Object.keys(t).forEach(function (r) {
                                    e[r] = t[r];
                                }),
                                (e.prototype = t.prototype || {}),
                                (window.CustomEvent = e));
                        })();
                },
            })
        ),
        c = n(
            Object.freeze({
                __proto__: null,
                default: function () {
                    "function" != typeof window.EventTarget &&
                        (window.EventTarget = t.EventTarget);
                },
            })
        ),
        f = o;
    !(function () {
        ("function" == typeof Promise &&
            "function" == typeof Symbol &&
            "object" ==
                ("undefined" == typeof Reflect ? "undefined" : e(Reflect))) ||
            f("https://cdn.bootcss.com/babel-polyfill/7.6.0/polyfill.min.js"),
            ("function" == typeof fetch && "function" == typeof Response) ||
                i(),
            ("function" == typeof URL &&
                "function" == typeof URLSearchParams) ||
                s(),
            ("function" == typeof Event && "function" == typeof CustomEvent) ||
                u();
        try {
            new EventTarget();
        } catch (t) {
            window.EventTarget = void 0;
        }
        "function" != typeof EventTarget && c();
    })();
    var h = function (t) {
            return t && t.Math == Math && t;
        },
        l =
            h(
                "object" ==
                    ("undefined" == typeof globalThis
                        ? "undefined"
                        : e(globalThis)) && globalThis
            ) ||
            h(
                "object" ==
                    ("undefined" == typeof window ? "undefined" : e(window)) &&
                    window
            ) ||
            h(
                "object" ==
                    ("undefined" == typeof self ? "undefined" : e(self)) && self
            ) ||
            h("object" == e(r) && r) ||
            (function () {
                return this;
            })() ||
            Function("return this")(),
        p = {},
        y = function (t) {
            try {
                return !!t();
            } catch (t) {
                return !0;
            }
        },
        d = !y(function () {
            return (
                7 !=
                Object.defineProperty({}, 1, {
                    get: function () {
                        return 7;
                    },
                })[1]
            );
        }),
        b = {},
        m = {}.propertyIsEnumerable,
        v = Object.getOwnPropertyDescriptor,
        w = v && !m.call({ 1: 2 }, 1);
    b.f = w
        ? function (t) {
              var e = v(this, t);
              return !!e && e.enumerable;
          }
        : m;
    var g = function (t, e) {
            return {
                enumerable: !(1 & t),
                configurable: !(2 & t),
                writable: !(4 & t),
                value: e,
            };
        },
        E = {}.toString,
        _ = function (t) {
            return E.call(t).slice(8, -1);
        },
        S = _,
        j = "".split,
        O = function (t) {
            if (null == t) throw TypeError("Can't call method on " + t);
            return t;
        },
        P = y(function () {
            return !Object("z").propertyIsEnumerable(0);
        })
            ? function (t) {
                  return "String" == S(t) ? j.call(t, "") : Object(t);
              }
            : Object,
        T = O,
        A = function (t) {
            return "object" === e(t) ? null !== t : "function" == typeof t;
        },
        U = A,
        R = function (t, e) {
            if (!U(t)) return t;
            var r, n;
            if (
                e &&
                "function" == typeof (r = t.toString) &&
                !U((n = r.call(t)))
            )
                return n;
            if ("function" == typeof (r = t.valueOf) && !U((n = r.call(t))))
                return n;
            if (
                !e &&
                "function" == typeof (r = t.toString) &&
                !U((n = r.call(t)))
            )
                return n;
            throw TypeError("Can't convert object to primitive value");
        },
        x = O,
        L = function (t) {
            return Object(x(t));
        },
        B = L,
        I = {}.hasOwnProperty,
        C = function (t, e) {
            return I.call(B(t), e);
        },
        D = A,
        F = l.document,
        k = D(F) && D(F.createElement),
        M = function (t) {
            return k ? F.createElement(t) : {};
        },
        H =
            !d &&
            !y(function () {
                return (
                    7 !=
                    Object.defineProperty(M("div"), "a", {
                        get: function () {
                            return 7;
                        },
                    }).a
                );
            }),
        N = d,
        q = b,
        z = g,
        G = function (t) {
            return P(T(t));
        },
        V = R,
        X = C,
        $ = H,
        J = Object.getOwnPropertyDescriptor;
    p.f = N
        ? J
        : function (t, e) {
              if (((t = G(t)), (e = V(e, !0)), $))
                  try {
                      return J(t, e);
                  } catch (t) {}
              if (X(t, e)) return z(!q.f.call(t, e), t[e]);
          };
    var K = y,
        Y = /#|\.prototype\./,
        Q = function (t, e) {
            var r = Z[W(t)];
            return (
                r == et || (r != tt && ("function" == typeof e ? K(e) : !!e))
            );
        },
        W = (Q.normalize = function (t) {
            return String(t).replace(Y, ".").toLowerCase();
        }),
        Z = (Q.data = {}),
        tt = (Q.NATIVE = "N"),
        et = (Q.POLYFILL = "P"),
        rt = Q,
        nt = {},
        ot = function (t) {
            if ("function" != typeof t)
                throw TypeError(String(t) + " is not a function");
            return t;
        },
        it = function (t, e, r) {
            if ((ot(t), void 0 === e)) return t;
            switch (r) {
                case 0:
                    return function () {
                        return t.call(e);
                    };
                case 1:
                    return function (r) {
                        return t.call(e, r);
                    };
                case 2:
                    return function (r, n) {
                        return t.call(e, r, n);
                    };
                case 3:
                    return function (r, n, o) {
                        return t.call(e, r, n, o);
                    };
            }
            return function () {
                return t.apply(e, arguments);
            };
        },
        at = {},
        st = A,
        ut = d,
        ct = H,
        ft = function (t) {
            if (!st(t)) throw TypeError(String(t) + " is not an object");
            return t;
        },
        ht = R,
        lt = Object.defineProperty;
    at.f = ut
        ? lt
        : function (t, e, r) {
              if ((ft(t), (e = ht(e, !0)), ft(r), ct))
                  try {
                      return lt(t, e, r);
                  } catch (t) {}
              if ("get" in r || "set" in r)
                  throw TypeError("Accessors not supported");
              return "value" in r && (t[e] = r.value), t;
          };
    var pt = at,
        yt = g,
        dt = d
            ? function (t, e, r) {
                  return pt.f(t, e, yt(1, r));
              }
            : function (t, e, r) {
                  return (t[e] = r), t;
              },
        bt = l,
        mt = p.f,
        vt = rt,
        wt = nt,
        gt = it,
        Et = dt,
        _t = C,
        St = function (t) {
            var e = function (e, r, n) {
                if (this instanceof t) {
                    switch (arguments.length) {
                        case 0:
                            return new t();
                        case 1:
                            return new t(e);
                        case 2:
                            return new t(e, r);
                    }
                    return new t(e, r, n);
                }
                return t.apply(this, arguments);
            };
            return (e.prototype = t.prototype), e;
        },
        jt = _,
        Ot =
            Array.isArray ||
            function (t) {
                return "Array" == jt(t);
            },
        Pt = Math.ceil,
        Tt = Math.floor,
        At = function (t) {
            return isNaN((t = +t)) ? 0 : (t > 0 ? Tt : Pt)(t);
        },
        Ut = At,
        Rt = Math.min,
        xt = function (t) {
            return t > 0 ? Rt(Ut(t), 9007199254740991) : 0;
        },
        Lt = Ot,
        Bt = xt,
        It = it,
        Ct = function t(e, r, n, o, i, a, s, u) {
            for (var c, f = i, h = 0, l = !!s && It(s, u, 3); h < o; ) {
                if (h in n) {
                    if (((c = l ? l(n[h], h, r) : n[h]), a > 0 && Lt(c)))
                        f = t(e, r, c, Bt(c.length), f, a - 1) - 1;
                    else {
                        if (f >= 9007199254740991)
                            throw TypeError(
                                "Exceed the acceptable array length"
                            );
                        e[f] = c;
                    }
                    f++;
                }
                h++;
            }
            return f;
        },
        Dt = { exports: {} },
        Ft = l,
        kt = dt,
        Mt = function (t, e) {
            try {
                kt(Ft, t, e);
            } catch (r) {
                Ft[t] = e;
            }
            return e;
        },
        Ht = "__core-js_shared__",
        Nt = l[Ht] || Mt(Ht, {});
    (Dt.exports = function (t, e) {
        return Nt[t] || (Nt[t] = void 0 !== e ? e : {});
    })("versions", []).push({
        version: "3.12.1",
        mode: "pure",
        copyright: "\xa9 2021 Denis Pushkarev (zloirock.ru)",
    });
    var qt,
        zt,
        Gt = 0,
        Vt = Math.random(),
        Xt = nt,
        $t = l,
        Jt = function (t) {
            return "function" == typeof t ? t : void 0;
        },
        Kt = function (t, e) {
            return arguments.length < 2
                ? Jt(Xt[t]) || Jt($t[t])
                : (Xt[t] && Xt[t][e]) || ($t[t] && $t[t][e]);
        },
        Yt = Kt("navigator", "userAgent") || "",
        Qt = l.process,
        Wt = Qt && Qt.versions,
        Zt = Wt && Wt.v8;
    Zt
        ? (zt = (qt = Zt.split("."))[0] < 4 ? 1 : qt[0] + qt[1])
        : Yt &&
          (!(qt = Yt.match(/Edge\/(\d+)/)) || qt[1] >= 74) &&
          (qt = Yt.match(/Chrome\/(\d+)/)) &&
          (zt = qt[1]);
    var te = zt && +zt,
        ee = y,
        re =
            !!Object.getOwnPropertySymbols &&
            !ee(function () {
                return !String(Symbol()) || (!Symbol.sham && te && te < 41);
            }),
        ne = re && !Symbol.sham && "symbol" == e(Symbol.iterator),
        oe = l,
        ie = Dt.exports,
        ae = C,
        se = function (t) {
            return (
                "Symbol(" +
                String(void 0 === t ? "" : t) +
                ")_" +
                (++Gt + Vt).toString(36)
            );
        },
        ue = re,
        ce = ne,
        fe = ie("wks"),
        he = oe.Symbol,
        le = ce ? he : (he && he.withoutSetter) || se,
        pe = A,
        ye = Ot,
        de = (function (t) {
            return (
                (ae(fe, t) && (ue || "string" == typeof fe[t])) ||
                    (ue && ae(he, t)
                        ? (fe[t] = he[t])
                        : (fe[t] = le("Symbol." + t))),
                fe[t]
            );
        })("species"),
        be = Ct,
        me = L,
        ve = xt,
        we = At,
        ge = function (t, e) {
            var r;
            return (
                ye(t) &&
                    ("function" != typeof (r = t.constructor) ||
                    (r !== Array && !ye(r.prototype))
                        ? pe(r) && null === (r = r[de]) && (r = void 0)
                        : (r = void 0)),
                new (void 0 === r ? Array : r)(0 === e ? 0 : e)
            );
        };
    (function (t, r) {
        var n,
            o,
            i,
            a,
            s,
            u,
            c,
            f,
            h = t.target,
            l = t.global,
            p = t.stat,
            y = t.proto,
            d = l ? bt : p ? bt[h] : (bt[h] || {}).prototype,
            b = l ? wt : wt[h] || (wt[h] = {}),
            m = b.prototype;
        for (i in r)
            (n =
                !vt(l ? i : h + (p ? "." : "#") + i, t.forced) &&
                d &&
                _t(d, i)),
                (s = b[i]),
                n && (u = t.noTargetGet ? (f = mt(d, i)) && f.value : d[i]),
                (a = n && u ? u : r[i]),
                (n && e(s) === e(a)) ||
                    ((c =
                        t.bind && n
                            ? gt(a, bt)
                            : t.wrap && n
                            ? St(a)
                            : y && "function" == typeof a
                            ? gt(Function.call, a)
                            : a),
                    (t.sham || (a && a.sham) || (s && s.sham)) &&
                        Et(c, "sham", !0),
                    (b[i] = c),
                    y &&
                        (_t(wt, (o = h + "Prototype")) || Et(wt, o, {}),
                        (wt[o][i] = a),
                        t.real && m && !m[i] && Et(m, i, a)));
    })(
        { target: "Array", proto: !0 },
        {
            flat: function () {
                var t = arguments.length ? arguments[0] : void 0,
                    e = me(this),
                    r = ve(e.length),
                    n = ge(e, 0);
                return (
                    (n.length = be(n, e, e, r, 0, void 0 === t ? 1 : we(t))), n
                );
            },
        }
    );
    var Ee = Kt("Array", "flat");
    "function" != typeof Array.prototype.flat &&
        (Array.prototype.flat = function () {
            var t =
                arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 1;
            return Ee(this, t);
        });
    var _e = function (t) {
        for (var e = -1, r = null == t ? 0 : t.length, n = {}; ++e < r; ) {
            var o = t[e];
            n[o[0]] = o[1];
        }
        return n;
    };
    "function" != typeof Object.fromEntries && (Object.fromEntries = _e);
})(eventTargetShim);
//# sourceMappingURL=polyfill.min.js.map
